{"version":3,"sources":["redux\\actionCreators\\fetchToDos.js","redux\\actionCreators\\selectList.js","assets\\helpers.js","redux\\actionCreators\\checkItem.js","redux\\actionCreators\\ignoreReminderItem.js","redux\\actionCreators\\editItemEndDate.js","components\\Notification.jsx","redux\\actionCreators\\editListName.js","redux\\actionCreators\\deleteList.js","components\\basics\\Sort.jsx","hocs\\contentEditable.js","components\\basics\\DivThanInput.jsx","redux\\actionCreators\\deleteItem.js","redux\\actionCreators\\changeItemPriorityColor.js","0","components\\basics\\PrioritySelector.jsx","components\\basics\\RatioButton.jsx","components\\SingleToDo.jsx","redux\\actionCreators\\addItem.js","components\\AddItem.jsx","components\\ToDos.jsx","redux\\actionCreators\\addList.js","redux\\actionCreators\\changeListColor.js","components\\basics\\ColorSelector.jsx","components\\AddList.jsx","components\\ListsManager.jsx","components\\NoToDos.jsx","components\\ToDosPage.jsx"],"names":["fetchToDos","dispatch","getState","on","snapshot","val","userId","activeList","selectList","listId","randomId","Math","random","toString","slice","dateTransformation","dateTime","Date","toDateString","dateCalendarTransformation","date","dateYear","getFullYear","dateDate","getDate","dateHours","getHours","dateMinutes","getMinutes","months","Array","dateFinal","dateMonth","getMonth","dateTimeTransformation","dateTransformed","toUTCString","substring","length","currTime","split","toISOString","slugify","text","toLowerCase","replace","checkItem","itemToCheck","child","once","then","checkedStatus","checked","update","updates","ignoreReminderItem","taskId","editItemEndDate","newEndDate","Notification","state","cleanState","setState","title","pageTitle","notificationFirstTime","notificationRun","notificationTimer","notificationData","allItems","dateNow","getTime","audio","Audio","notificationSound","map","itemEndDate","item","end_date","reminder_set","showNotification","play","task","lists","props","items","Object","keys","listKey","isArray","push","itemTiny","filter","ignoreMe","handleComplete","handleCheckItem","id","list_id","handleEditItemEndDate","handleIgnore","handleIgnoreReminderItem","React","PureComponent","color","StyledNotification","colors","light","mainColor","lightGrey","mapStateToProps","mapDispatchToProps","newDate","editListName","newName","deleteList","nextListId","Sort","sortBy","handleSortByChange","e","target","value","StyledSortBy","contentEditable","WrappedComponent","toggleEdit","stopPropagation","editing","cancel","edit","domElm","focus","save","getInputValue","textContent","handleKeyDown","key","dontSaveOnEnter","Component","editOnClick","undefined","domNode","DivThanInput","EditableDiv","StyledEditableDiv","divProps","assign","className","inputPlaceholder","deleteItem","itemToDelete","changeItemPriorityColor","newPriority","defineProperty","exports","_react","require","_react2","_interopRequireDefault","obj","__esModule","default","_extends","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_ref","createElement","d","_ref2","SvgBell","viewBox","PrioritySelector","priorityColor","low","priorityColors","medium","high","priority","handleChangePriority","handleChangeItemPriorityColor","showChangePriority","StyledColorList","StyledLabelColor","RatioButton","StyledRatio","secondary","SingleToDo","getClasses","classes","showItem","handleDeleteItem","completeListLayout","bind","showToDoOptionsFunc","itemListDetails","primary","showToDoOptions","StyledLi","StyledTask","StyledTime","addItem","itemToAdd","newItemObject","AddItem","handleSubmit","preventDefault","inputValue","handleAddItem","handleChange","StyledInput","newItem","loading","LoadableSingleToDoDetails","ToDos","handleEditList","handleEditListName","currentList","handleDeleteList","showDetailsFunc","closeDetails","toggle","showEditListNameFunc","showEditListName","numberOfCheckedItems","checkedItems","name","filterCheckedFunc","filterChecked","showDetails","completeListLayoutNum","detailsTask","StyledTodoHolder","StyledFilterChecked","StyledToDo","toDoWidth","addList","newList","newColor","listColors","newListObject","changeListColor","fill","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","SvgPaintBoardAndBrush","ColorSelector","handleColorChange","listColor","showColorSelector","backgroundColor","list","StyledImg","ChangeColorIcon","AddList","inputNow","clickBehavior","inputColor","user","uid","handleColorAdd","autoFocus","hideColorSelector","StyledForm","buttonHeight","ListsManager","handleSelectList","sortByCreationDate","listsArray","sort","a","b","creation_date","handleAddList","StyledUl","StyledList","StyledButton","NoToDos","showAddList","StyledNoToDos","ToDosPage","getCurrentList","currList","itemsArray","itemKey","nameA","nameB","start_date","containerHeight","document","querySelector","clientHeight","maxItems","floor","getNextListIdToShowAfterDeleteCurrentList","listsLength","nextListIndex","indexOf","nextList","detailsTaskId","handleFetchToDos","expandsToDoOuter","keyframes","compressToDoOuter","StyledContainer"],"mappings":";AAEO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAAA,IAAA,OAAA,EAFP,EAAA,QAAA,yBAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAMA,EAAa,QAAA,WAAA,SAAA,GAAA,OAAU,EAAA,EAAA,mBAAA,KAAA,SAAOC,EAAAA,EAAUC,GAAjB,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EACzBC,EAAAA,SAAAA,GAAG,QAAS,SAAY,GACtB,EAAA,CACD,KAAA,eACCC,MAAAA,EAASC,MACRC,OAAAA,EACIJ,WAAAA,IAAWK,eANO,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAAV,SAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAAU;;ACGnC,aALc,SAASC,EAAWC,GAC1B,MAAA,CACC,KAAA,qBACNA,OAAAA,GAEH,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IALuBD,QAAAA,QAAAA;;;;AC4DjB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA5DA,IAAME,EAAW,QAAA,SAAA,WACtBC,OAAAA,KAAKC,SACFC,SAAS,IACTC,OAAO,KAECC,EAAqB,QAAA,mBAAA,SAAY,GACxCC,OAAAA,EACS,IAAIC,KAAKD,GACRE,eAEL,MAIEC,EAA6B,QAAA,2BAAA,SAAY,GAChDH,GAAAA,EAAU,CACRI,IAAAA,EAAO,IAAIH,KAAKD,GAChBK,EAAWD,EAAKE,cAChBC,EAAWH,EAAKI,UAAY,GAASJ,IAAAA,EAAKI,UAAcJ,EAAKI,UAC7DC,EAAgC,IAApBL,EAAKM,WAAmB,KAAON,EAAKM,WAChDC,EAAoC,IAAtBP,EAAKQ,aAAqB,KAAOR,EAAKQ,aAEpDC,EAAS,IAAIC,MAiBVC,OAhBA,EAAA,GAAK,MACL,EAAA,GAAK,MACL,EAAA,GAAK,MACL,EAAA,GAAK,MACL,EAAA,GAAK,MACL,EAAA,GAAK,MACL,EAAA,GAAK,MACL,EAAA,GAAK,MACL,EAAA,GAAK,MACL,EAAA,GAAK,MACL,EAAA,IAAM,MACN,EAAA,IAAM,MAGMR,EAAYS,IAFfH,EAAOT,EAAKa,YAEgBZ,IAAAA,EAAYI,IAAAA,EAAaE,IAAAA,EAI9D,OAAA,MAIEO,EAAyB,QAAA,uBAAA,SAAY,GAC5ClB,GAAAA,EAAU,CACRI,IACAe,EADO,IAAIlB,KAAKD,GACOoB,cACpBD,OAAAA,EAAgBE,UAAU,EAAGF,EAAgBG,OAAS,GAEtD,OAAA,MAIEC,EAAW,QAAA,SAAA,WACtB,OAAA,IAAItB,MAAK,IAAIA,MAAOJ,WAAW2B,MAAM,OAAO,GAAK,QAC9CC,cACAD,MAAM,KAAK,IAEHE,EAAU,QAAA,QAAA,SAAA,GACrBC,OAAAA,EACG9B,WACA+B,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO;;AClEb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAAA,IAAA,OAAA,EAFP,EAAA,QAAA,yBAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAMC,EAAY,QAAA,UAAA,SAACC,EAAatC,GAAd,OAAyB,EAAA,EAAA,mBAAA,KAAA,SAAMR,EAAAA,GAAN,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,EAClC,GAGX+C,EAAAA,YAAAA,MAAevC,SAAAA,EAAgBsC,UAAAA,GAC/BE,KAAK,SACLC,KAAK,SAAS9C,GACT+C,IAAAA,EAAgB/C,EAASC,OAASD,EAASC,MAAM+C,QAEpC3C,EAAAA,SAAAA,EAAgBsC,UAAAA,EAAyB,aAACI,EAC1C1C,EAAAA,SAAAA,EAAgBsC,UAAAA,EAA8B,kBAAA,EACnDM,EAAAA,YAAAA,OAAOC,KAXyB,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAAzB,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAAyB;;ACA3C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,wBAAA,EAAA,IAAA,OAAA,EAFP,EAAA,QAAA,yBAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAMC,EAAqB,QAAA,mBAAA,SAACC,EAAQ/C,GAAT,OAAoB,EAAA,EAAA,mBAAA,KAAA,SAAMR,EAAAA,GAAN,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,GAAA,EACtC,IAEGQ,SAAAA,EAAgB+C,UAAAA,EAAyB,kBAAA,EAE9CH,EAAAA,YAAAA,OAAOC,GALiC,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAApB,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAAoB;;ACA/C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAAA,IAAA,OAAA,EAFP,EAAA,QAAA,yBAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAMG,EAAkB,QAAA,gBAAA,SAC7BhD,EACA+C,EACAE,GAH6B,OAI1B,EAAA,EAAA,mBAAA,KAAA,SAAMzD,EAAAA,GAAN,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,GAAA,EACW,IAEGQ,SAAAA,EAAgB+C,UAAAA,EAAqBE,aAAAA,EACrCjD,EAAAA,SAAAA,EAAgB+C,UAAAA,EAAyB,kBAAA,EAE9CH,EAAAA,YAAAA,OAAOC,GANhB,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAJ0B,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAI1B;;ACuLU,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,GAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GA7Lf,EAAA,QAAA,SA6Le,EAAA,EAAA,GA5Lf,EAAA,QAAA,eACA,EAAA,QAAA,qBA2Le,EAAA,EAAA,GAzLf,EAAA,QAAA,0BAEA,EAAA,QAAA,oCAuLe,EAAA,EAAA,GArLf,EAAA,QAAA,qBAEA,EAAA,QAAA,qCACA,EAAA,QAAA,8CACA,EAAA,QAAA,2CAEA,EAAA,QAAA,mBA+Ke,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GA7KTK,IAAAA,EAAAA,SAAAA,GA6KS,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GA5KbC,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACY,kBAAA,EACZ,KAAA,GACK,UAAA,gBAGbC,EAAAA,WAAa,WACNC,EAAAA,SACH,CACoB,kBAAA,EACZ,KAAA,GACK,UAAA,gBAEb,WACWC,SAAAA,MAAQ,EAAKH,MAAMI,aAUlCC,EAAAA,sBAAwB,WACX,WAAA,WACJC,EAAAA,mBACJ,MAGLC,EAAAA,kBAAoB,WACN,YAAA,WACLD,EAAAA,mBACJ,MAGLA,EAAAA,gBAAkB,WACZE,IAAAA,EAAmB,EAAKC,WACxBC,EAAU,IAAIrD,MAAK,EAAT,EAAA,aAAqBsD,UAC7BC,EAAQ,IAAIC,MAAMC,EAAV,SACGC,EAAAA,IAAI,SAAQ,GACvBC,IAAAA,EAAc,IAAI3D,KAAK4D,EAAKC,UAAUP,UACtCM,EAAKE,cACHT,GAAWM,IACR,EAAKhB,MAAMoB,kBACRC,EAAAA,OAEHnB,EAAAA,SACH,CACoB,kBAAA,EADpB,KAAA,EAG0Be,UAAAA,aAAAA,EAAKK,MAE/B,WACWnB,SAAAA,MAAQ,EAAKH,MAAMI,gBAQxCK,EAAAA,SAAW,WACLc,IAAAA,EAAa,EAAA,GAAA,EAAKC,MAAMD,OACxBE,EAAQ,GAGV,GAAoB,WAApB,EAAKD,MAAMD,OACXG,OAAOC,KAAK,EAAKH,MAAMD,OAAO7C,OAAS,EAahC+C,OAXQC,OAAOC,KAAKJ,GAAOR,IAAI,SAAA,GAAWQ,OAAAA,EAAMK,GAASH,QACnDV,IAAI,SAAQ,GACH,iBAATE,IAAAA,EAAAA,YAAAA,EAAAA,KAAsB/C,MAAM2D,QAAQZ,GAGxCF,EAAAA,IAAI,SAAA,GAAYU,OAAAA,EAAMK,KAAKC,KAFzBJ,OAAAA,KAAKV,GAAMF,IAAI,SAAA,GAAYU,OAAAA,EAAMK,KAAKb,EAAKc,QAM9CN,EAAAA,EAAMO,OAAO,SAAA,GAAQ,OAACf,EAAKgB,YAMvCC,EAAAA,eAAiB,WACVjC,EAAAA,aAEAuB,EAAAA,MAAMW,gBAAgB,EAAKnC,MAAMiB,KAAKmB,GAAI,EAAKpC,MAAMiB,KAAKoB,SAC1Db,EAAAA,MAAMc,sBACT,EAAKtC,MAAMiB,KAAKoB,QAChB,EAAKrC,MAAMiB,KAAKmB,GAChB,KAGJG,EAAAA,aAAe,WACRtC,EAAAA,aACAuB,EAAAA,MAAMgB,yBACT,EAAKxC,MAAMiB,KAAKmB,GAChB,EAAKpC,MAAMiB,KAAKoB,UAEnB,EAAA,EAAA,GAuEY,OAAA,EAAA,EA7KYI,EAAMC,QAAAA,eA6KlB,EAAA,EAAA,CAAA,CAAA,IAAA,oBAzJO,MAAA,WACbrC,KAAAA,wBACAE,KAAAA,sBAuJM,CAAA,IAAA,SArEJ,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACQP,KAAAA,MAAMoB,iBACV,EAAA,QAAA,cAAA,EAAA,CACa,UAAA,KAAKI,MAAMD,MAAM,KAAKvB,MAAMiB,KAAKoB,SAASM,OAErD,EAAA,QAAA,cAAA,KAAA,KAAU3C,KAAAA,MAAMiB,KAAKK,MACrB,EAAA,QAAA,cAAA,OAAA,MAA8B,EAAA,EAAA,wBAAA,KAAKtB,MAAMiB,KAAKC,WAC7C,EAAA,QAAA,cAAA,EAAD,OAAA,CAAA,SAAA,EAEiB,cAAA,WAAM,OAAA,EAAKgB,kBACpB,KAAA,aAEP,EAAA,QAAA,cAAA,EAAD,OAAA,CACiB,cAAA,WAAM,OAAA,EAAKK,gBACpB,KAAA,oBAGR,UAkDG,EA7KTxC,GAkIA6C,GAAqB,EAAO,EAAA,SAAA,UAA5B,WAAA,CAAA,YAAA,mCAAA,YAAA,gBAAqB,CACXC,CAAAA,cAAAA,4BAAAA,+FAAAA,mEAAAA,qEAAAA,EAAOC,OAAAA,MACM,SAAA,GAAStB,OAAAA,EAAMuB,WAS/B,SAAA,GAASvB,OAAAA,EAAMuB,WAMfF,EAAOG,OAAAA,WAUpB,SAASC,EAA2B,GAC3B,MAAA,CAAE1B,MADgBA,EAAAA,OAI3B,IAAM2B,EAAqB,SAAA,GAAa,MAAA,CAAA,gBACtB/D,SAAAA,EAAatC,GAClB,GAAA,EAAUsC,EAAAA,WAAAA,EAAatC,KAFI,yBAIbsC,SAAAA,EAAatC,GAC3B,GAAA,EAAmBsC,EAAAA,oBAAAA,EAAatC,KALL,sBAOhBA,SAAAA,EAAQ+C,EAAQuD,GAC3B,GAAA,EAAgBtG,EAAAA,iBAAAA,EAAQ+C,EAAQuD,OAI9B,QAAA,SAAA,EACbF,EAAAA,SAAAA,EACAC,EAFa,CAGbnD;;AC9LK,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAAA,IAAA,OAAA,EAFP,EAAA,QAAA,yBAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAMqD,EAAe,QAAA,aAAA,SAACvG,EAAQwG,GAAT,OAAqB,EAAA,EAAA,mBAAA,KAAA,SAAMhH,EAAAA,GAAN,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,GAAA,EACjC,IAEGQ,SAAAA,EAAiBwG,SAAAA,EACtB5D,EAAAA,YAAAA,OAAOC,GAJ4B,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAArB,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAAqB;;ACA1C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAAA,IAAA,OAAA,EAFP,EAAA,QAAA,yBAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAM4D,EAAa,QAAA,WAAA,SAACzG,EAAQ0G,GAAT,OAAwB,EAAA,EAAA,mBAAA,KAAA,SAAMlH,EAAAA,GAAN,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAKzC,OALyC,EAClC,IACGQ,SAAAA,GAAY,KACjB4C,EAAAA,YAAAA,OAAOC,GAEZ,EAAA,OAAA,SAAA,CACC,KAAA,cACN6D,WAAAA,IAP8C,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAAxB,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAAwB;;ACyBlD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GA3BA,EAAA,QAAA,SA2BA,EAAA,EAAA,GA1BA,EAAA,QAAA,qBA0BA,EAAA,EAAA,GAzBA,EAAA,QAAA,YAEA,EAAA,QAAA,6BAuBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GArBqBC,IAAAA,EAAAA,SAAAA,GAqBrB,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EAAA,WAAA,OAAA,eAAA,IAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EArBkCf,EAAMC,QAAAA,eAqBxC,EAAA,EAAA,CAAA,CAAA,IAAA,SApBW,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,EAAA,KACE,EAAA,QAAA,cAAA,OAAA,KAAA,aACA,EAAA,QAAA,cAAA,SAAA,CACS,MAAA,KAAKlB,MAAMiC,OACR,SAAA,SAAA,GAAK,OAAA,EAAKjC,MAAMkC,mBAAmBC,EAAEC,OAAOC,SAEtD,EAAA,QAAA,cAAA,SAAQ,CAAA,MAAM,kBAAd,kBACA,EAAA,QAAA,cAAA,SAAQ,CAAA,MAAM,sBAAd,wBACA,EAAA,QAAA,cAAA,SAAQ,CAAA,MAAM,sBAAd,wBACA,EAAA,QAAA,cAAA,SAAQ,CAAA,MAAM,UAAd,UACA,EAAA,QAAA,cAAA,SAAQ,CAAA,MAAM,UAAd,gBAQV,EArBqBL,GAAAA,QAAAA,QAAAA,EAqBrB,IAAMM,GAAe,EAAO,EAAA,SAAA,OAAtB,WAAA,CAAA,YAAA,qBAAA,YAAA,YAAe,CAOG,CAAA,6EAAA,uCAAA,EAAQ,EAAA,SAAA,IAAMjB,EAAOG,OAAAA;;ACkD5C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAjFuBe,QAAAA,QAAAA,EAFxB,IAAA,EAAA,QAAA,SAmFC,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EApFD,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAGe,SAASA,EAAgBC,GACtC,OAAA,SAAA,GAAA,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GACEhE,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACG,SAAA,GAGXiE,EAAAA,WAAa,SAAK,GACdC,EAAAA,kBACE,EAAKlE,MAAMmE,QACRC,EAAAA,SAEAC,EAAAA,QAITA,EAAAA,KAAO,WACAnE,EAAAA,SACH,CACW,SAAA,GAEX,WACOoE,EAAAA,OAAOC,WAKlBC,EAAAA,KAAO,WACAtE,EAAAA,SAAS,CAAEiE,SAAS,GAAS,WAC3B3C,EAAAA,MAAMiD,cAAc,EAAKH,OAAOI,gBAIzCN,EAAAA,OAAS,WACFlE,EAAAA,SAAS,CACH,SAAA,KAIbyE,EAAAA,cAAgB,SAAK,GACXC,IAAAA,EAAQjB,EAARiB,IAEJC,GADwB,EAAKrD,MAAzBqD,gBAEED,OAAAA,GACD,IAAA,SACEJ,EAAAA,YAIDI,OAAAA,GACD,IAAA,QACA,IAAA,SACEJ,EAAAA,SAlDf,EAAA,EAAA,GAAA,OAAA,EAAA,EAAqB/B,EAAMqC,QAAAA,WAA3B,EAAA,EAAA,CAAA,CAAA,IAAA,SAwDW,MAAA,WAAA,IAAA,EAAA,KACHC,GAAc,EACVZ,EAAY,KAAKnE,MAAjBmE,QAKN,YAJ6Ba,IAA3B,KAAKxD,MAAMuD,cACC,EAAA,KAAKvD,MAAMuD,aAGzB,EAAA,QAAA,cAAA,EAAA,EAAA,CACkC,gCAAA,EACrBZ,UAAAA,EAAU,UAAY,GACxBY,QAAAA,EAAc,KAAKd,gBAAae,EACxBb,gBAAAA,EACZ,IAAA,SAAW,GACTG,EAAAA,OAASW,GAER,OAAA,KAAKT,KACF,UAAA,KAAKG,eACZ,KAAKnD,OAEHA,KAAAA,MAAMqC,WA3EpB,EAAA;;ACmBF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAvBA,EAAA,QAAA,SAuBA,EAAA,EAAA,GAtBA,EAAA,QAAA,qBAsBA,EAAA,EAAA,GApBA,EAAA,QAAA,8BAoBA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAlBqBqB,IAAAA,EAAAA,SAAAA,GAkBrB,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EAAA,WAAA,OAAA,eAAA,IAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAlB0CzC,EAAMC,QAAAA,eAkBhD,EAAA,EAAA,CAAA,CAAA,IAAA,SAjBW,MAAA,WACHyC,IAAAA,GAAc,EAAgBC,EAAAA,SAAAA,GAC5BC,EAAW3D,OAAO4D,OAAO,GAAI,KAAK9D,OAEtC,OAAA,EAAC,QAAA,cAAA,EAAD,EAAA,CACa,UAAA,KAAKA,MAAM+D,UACZ,UAAA,KACL,KAAA,OACQ,YAAA,KAAK/D,MAAMgE,iBACjB,MAAA,KAAKhE,MAAMqC,OACdwB,QAOZ,EAlBqBH,GAAAA,QAAAA,QAAAA,EAkBrB,IAAME,GAAoB,EAAO,EAAA,SAAA,OAA3B,WAAA,CAAA,YAAA,kCAAA,YAAA,gBAAoB,CAA1B,CAAA;;ACrBO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAAA,IAAA,OAAA,EAFP,EAAA,QAAA,yBAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAMK,EAAa,QAAA,WAAA,SAACC,EAAc7I,GAAf,OAA0B,EAAA,EAAA,mBAAA,KAAA,SAAMR,EAAAA,GAAN,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,GAAA,EACpC,IACGQ,SAAAA,EAAgB6I,UAAAA,GAAkB,KAEvCjG,EAAAA,YAAAA,OAAOC,GAJ+B,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAA1B,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAA0B;;ACA7C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,6BAAA,EAAA,IAAA,OAAA,EAFP,EAAA,QAAA,yBAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAMiG,EAA0B,QAAA,wBAAA,SACrC9I,EACA+C,EACAgG,GAHqC,OAIlC,EAAA,EAAA,mBAAA,KAAA,SAAMvJ,EAAAA,GAAN,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,GAAA,EACW,IAEGQ,SAAAA,EAAgB+C,UAAAA,EAAqBgG,aAAAA,EAE1CnG,EAAAA,YAAAA,OAAOC,GALhB,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAJkC,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAIlC;;ACNL,aAEAgC,OAAOmE,eAAeC,QAAS,aAAc,CAC3CjC,OAAO,IAGT,IAAIkC,EAASC,QAAQ,SAEjBC,EAAUC,EAAuBH,GAErC,SAASG,EAAuBC,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAEvF,SAASG,IASL,OARFA,EAAW5E,OAAO4D,QAAU,SAAU1B,GACpC,IAAK,IAAI2C,EAAI,EAAGA,EAAIC,UAAU9H,OAAQ6H,IAAK,CACzC,IAAIE,EAASD,UAAUD,GAAG,IAAK,IAAI3B,KAAO6B,EACpC/E,OAAOgF,UAAUC,eAAeC,KAAKH,EAAQ7B,KAC/ChB,EAAOgB,GAAO6B,EAAO7B,IAG1B,OAAOhB,IACQiD,MAAMC,KAAMN,WAGhC,IAAIO,EAEJd,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,sgBAGDC,EAEJjB,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,osBAGDE,EAAU,SAAiB3F,GAC7B,OAAOyE,EAAQI,QAAQW,cAAc,MAAOV,EAAS,CACnDc,QAAS,eACR5F,GAAQuF,EAAMG,IAGnBpB,QAAQO,QAAUc;;AC6DHE,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAvGf,EAAA,QAAA,SAuGeA,EAAAA,EAAAA,GAtGf,EAAA,QAAA,qBAsGeA,EAAAA,EAAAA,GArGf,EAAA,QAAA,YAEA,EAAA,QAAA,6BAEA,EAAA,QAAA,gBAiGeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,kEAAAA,GAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,IAAAA,OAAAA,eAAAA,OAAAA,eAAAA,EAAAA,GAAAA,EAAAA,UAAAA,GA/FTA,IAAAA,EAAAA,SAAAA,GA+FSA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA9FbrH,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACc,oBAAA,GAGtBsH,EAAAA,cAAgB,WACVC,IAAAA,EAAMC,EAAeD,eAAAA,IACrBE,EAASD,EAAeC,eAAAA,OACxBC,EAAOF,EAAeE,eAAAA,KACpBC,EAAa,EAAKnG,MAAlBmG,SAEFA,OAAa,IAAbA,EACKJ,EACe,IAAbI,EACFF,EAEAC,GAIXE,EAAAA,qBAAuB,SAAC/K,EAAQ+C,EAAQgG,GAEtB,EADI,QAAhBA,EACY,EACW,WAAhBA,EACK,EAEA,EAEXpE,EAAAA,MAAMqG,8BAA8BhL,EAAQ+C,EAAQgG,GACpD1F,EAAAA,SAAS,CACQ,oBAAA,KAEvB,EAAA,EAAA,GA+DYmH,OAAAA,EAAAA,EA/FgB5E,EAAMC,QAAAA,eA+FtB2E,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SA7DJ,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACE,EAAA,QAAA,cAAA,OAAM,CAAA,UAAU,YACb,EAAA,QAAA,cAAA,EAAD,OAAA,CACO,KAAA,WACU,cAAA,WAAM,OAAA,EAAKnH,SAAS,CAAE4H,oBAAoB,KACpD,KAAA,WACM,UAAA,KAAKR,mBAGdtH,KAAAA,MAAM8H,oBACV,EAAA,QAAA,cAAA,EAAA,KACUnG,OAAAA,KAAK6F,EAAZ,gBAA4BzG,IAAI,SAACuG,EAAef,GAC/C,OAAA,EAAA,QAAA,cAAA,EAAA,CACOA,IAAAA,EACMiB,UAAAA,EAAeF,eAAAA,GACjB,QAAA,WACP,OAAA,EAAKM,qBACH,EAAKpG,MAAM3E,OACX,EAAK2E,MAAM5B,OACX0H,KAIHA,WAoCFD,EA/FTA,GAsEAU,GAAkB,EAAO,EAAA,SAAA,MAAzB,WAAA,CAAA,YAAA,oCAAA,YAAA,YAAkB,CAMIlF,CAAAA,6FAAAA,eAAAA,kBAAAA,EAAOG,OAAAA,WACnB,EAAQ,EAAA,SAAA,KAAOH,EAAOC,OAAAA,QAIhCkF,GAAmB,EAAO,EAAA,SAAA,MAA1B,WAAA,CAAA,YAAA,qCAAA,YAAA,YAAmB,CAET,CAAA,6BAAA,4BAAA,uHAAA,SAAA,GAASxG,OAAAA,EAAMuB,WACF,SAAA,GAAS,OAAA,EAAO,EAAA,QAAA,GAAKvB,EAAMuB,aAWzCsE,QAAAA,QAAAA;;ACtBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAhFf,IAAA,EAAA,QAAA,SAgFe,EAAA,EAAA,GA/Ef,EAAA,QAAA,eACA,EAAA,QAAA,qBA8Ee,EAAA,EAAA,GA7Ef,EAAA,QAAA,YAEA,EAAA,QAAA,6BAEA,EAAA,QAAA,wCAyEe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAvEf,IAAMY,EAAc,SAAA,GAClB,OAAA,EAAA,QAAA,cAAA,EAAA,CACazG,UAAAA,EAAMuB,UACNvB,UAAAA,EAAMhC,QAAU,UAAY,eAEhC,EAAA,QAAA,cAAA,QAAA,CAAA,KAAK,WAAW,GAAegC,WAAAA,EAAM5B,SAC5C,EAAA,QAAA,cAAA,QAAA,CACsB4B,QAAAA,WAAAA,EAAM5B,OACjB,QAAA,WAAM4B,OAAAA,EAAMW,gBAAgBX,EAAM5B,OAAQ4B,EAAM3E,aAMzDqL,GAAc,EAAO,EAAA,SAAA,OAArB,WAAA,CAAA,YAAA,2BAAA,YAAA,YAAc,CAQIrF,CAAAA,iHAAAA,qBAAAA,+HAAAA,qBAAAA,8BAAAA,qRAAAA,0BAAAA,EAAOC,OAAAA,MACPD,EAAOG,OAAAA,WAQL,EAAQ,EAAA,SAAA,GAAKH,EAAOsF,OAAAA,WACpBtF,EAAOsF,OAAAA,UAGP,SAAA,GAAS3G,OAAAA,EAAMuB,WAsBnB,SAAA,GAAS,OAAA,EAAQ,EAAA,SAAA,GAAKvB,EAAMuB,aAQ5CG,EAAqB,SAAA,GAAa,MAAA,CAAA,gBACtB/D,SAAAA,EAAatC,GAClB,GAAA,EAAUsC,EAAAA,WAAAA,EAAatC,OAIrB,QAAA,SAAA,EACb,EAAA,SAAA,KACAqG,EAFa,CAGb+E;;AC4Fa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAhLf,EAAA,QAAA,SAgLe,EAAA,EAAA,GA/Kf,EAAA,QAAA,eACA,EAAA,QAAA,qBA8Ke,EAAA,EAAA,GA5Kf,EAAA,QAAA,qBAEA,EAAA,QAAA,sCACA,EAAA,QAAA,mDAEA,EAAA,QAAA,4BAuKe,EAAA,EAAA,GArKf,EAAA,QAAA,6BAqKe,EAAA,EAAA,GApKf,EAAA,QAAA,wBAoKe,EAAA,EAAA,GAnKf,EAAA,QAAA,mBACA,EAAA,QAAA,0BAkKe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAhKTG,IAAAA,EAAAA,SAAAA,GAgKS,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GA/JbC,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,WAAa,WAWJC,OATH,EAAK9G,MAAMF,KAAK9B,QACd,EAAKgC,MAAM+G,SACH,eAEA,eAGF,oBAKd9C,EAAAA,WAAa,SAACC,EAAc7I,GACrB2E,EAAAA,MAAMgH,iBAAiB9C,EAAc7I,GAExC,WAAA,WACO2E,KAAAA,MAAMiH,sBACXC,KAHJ,GAIE,IAEH,EAAA,EAAA,GAyIY,OAAA,EAAA,EAhKUjG,EAAMC,QAAAA,eAgKhB,EAAA,EAAA,CAAA,CAAA,IAAA,SAvIJ,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACE,EAAA,QAAA,cAAA,EAAA,CACK,GAAA,eACQ,UAAA,KAAK2F,aACF,aAAA,WACZ,OAAA,EAAK7G,MAAMmH,oBAAoB,EAAKnH,MAAMF,KAAKc,IAAI,IAEvC,aAAA,WACZ,OAAA,EAAKZ,MAAMmH,oBAAoB,EAAKnH,MAAMF,KAAKc,IAAI,KAGrD,EAAA,QAAA,cAAA,MAAA,KACG,EAAA,QAAA,cAAA,EAAD,QAAA,CACW,QAAA,KAAKZ,MAAMF,KAAK9B,QACjB,OAAA,KAAKgC,MAAMF,KAAKc,GACb,UAAA,KAAKZ,MAAMuB,UACd,OAAA,KAAKvB,MAAM3E,SAErB,EAAA,QAAA,cAAA,EAAA,CACO,KAAA,SACO,WAAA,WAAM,OAAA,EAAK2E,MAAMoH,gBAAgB,EAAKpH,MAAMF,OAC/C,QAAA,WAAM,OAAA,EAAKE,MAAMoH,gBAAgB,EAAKpH,MAAMF,OAC5C,SAAA,KAEHE,KAAAA,MAAMF,KAAKA,KACY,IAAvBE,KAAAA,MAAMF,KAAKJ,UACf,EAAA,QAAA,cAAA,EAAA,CAEI,UAAA,KAAKM,MAAMF,KAAKH,aACZ0B,EAAOgG,OAAAA,QACPhG,EAAOG,OAAAA,WAGZ,EAAA,QAAA,cAAA,EAAD,QAPF,OAQ0B,EAAA,EAAA,wBAAA,KAAKxB,MAAMF,KAAKJ,YAI7C,EAAA,QAAA,cAAA,EAAD,QAAA,CAEI,8BAAA,KAAKM,MAAMqG,8BAEH,SAAA,KAAKrG,MAAMF,KAAKqG,SAClB,OAAA,KAAKnG,MAAM3E,OACX,OAAA,KAAK2E,MAAMF,KAAKc,KAEpBZ,KAAAA,MAAMsH,iBACV,EAAA,QAAA,cAAA,OAAA,KACG,EAAA,QAAA,cAAA,EAAD,OAAA,CACO,KAAA,SACU,cAAA,WACb,OAAA,EAAKrD,WAAW,EAAKjE,MAAMF,KAAKc,GAAI,EAAKZ,MAAM3E,SAE5C,KAAA,mBAgFR,EAhKTuL,GA4FAW,GAAW,EAAO,EAAA,SAAA,MAAlB,WAAA,CAAA,YAAA,uBAAA,YAAA,eAAW,CAAjB,CAAA,kUAiCMC,GAAa,EAAO,EAAA,SAAA,OAApB,WAAA,CAAA,YAAA,yBAAA,YAAA,eAAa,CAAnB,CAAA,gFAMMC,GAAa,EAAO,EAAA,SAAA,QAApB,WAAA,CAAA,YAAA,yBAAA,YAAA,eAAa,CAKR,CAAA,mFAAA,4CAAA,SAAA,0CAAA,SAAA,GAASzH,OAAAA,EAAMuB,WAIZ,SAAA,GAASvB,OAAAA,EAAMuB,WACjB,SAAA,GAASvB,OAAAA,EAAMuB,YAMrBE,EAAkB,SAAA,GAAgB,MAAA,CACtC1B,MADyBA,EAAAA,QAIrB2B,EAAqB,SAAA,GAAa,MAAA,CAAA,iBACrBwC,SAAAA,EAAc7I,GACpB,GAAA,EAAW6I,EAAAA,YAAAA,EAAc7I,KAFE,8BAIRA,SAAAA,EAAQ+C,EAAQgG,GACnC,GAAA,EAAwB/I,EAAAA,yBAAAA,EAAQ+C,EAAQgG,OAItC,QAAA,SAAA,EACb3C,EAAAA,SAAAA,EACAC,EAFa,CAGbkF;;AC/KK,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,OAAA,EAJP,EAAA,QAAA,yBAEA,EAAA,QAAA,wBAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAMc,EAAU,QAAA,QAAA,SAACC,EAAWtM,GAAZ,OAAuB,EAAA,EAAA,mBAAA,KAAA,SAAMR,EAAAA,GAAN,IAAA,EAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,EAC9B,GAD8B,GAE/B,EAF+B,EAAA,YAKzC+C,EAAAA,YAAAA,MAAevC,SAAAA,EACfwC,WAAAA,KAAK,SACLC,KAAK,SAAS9C,GAEQwI,OADDxI,EAASC,OAASD,EAASC,MAAMwF,YAElCpF,EAAAA,SAAAA,EAA2B,mBAAA,MAG1CuM,IAAAA,EAAgB,CACdxJ,GAAAA,EACEuJ,KAAAA,EACM,YAAA,EAHM,EAAA,YAIR,SAAA,GACI,cAAA,EACL,SAAA,EACC,SAAA,EACDtM,QAAAA,GAGMA,EAAAA,SAAAA,EAAgB+C,UAAAA,GAAYwJ,EAEjC3J,EAAAA,YAAAA,OAAOC,KA1BqB,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAAvB,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAAuB;;AC0D/B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GA9Df,EAAA,QAAA,SA8De,EAAA,EAAA,GA7Df,EAAA,QAAA,qBA6De,EAAA,EAAA,GA5Df,EAAA,QAAA,eAEA,EAAA,QAAA,mCA0De,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAxDT2J,IAAAA,EAAAA,SAAAA,GAwDS,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAvDbrJ,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACM,WAAA,IAGdsJ,EAAAA,aAAe,SAAK,GAChBC,EAAAA,iBAC2B,IAAzB,EAAKvJ,MAAMwJ,YAAoB,EAAKxJ,MAAMwJ,WAAW9K,OAAS,IAC3D8C,EAAAA,MAAMiI,cAAc,EAAKzJ,MAAMwJ,WAAY,EAAKhI,MAAM3E,QAEzD,WAAA,WACO2E,KAAAA,MAAMiH,sBACXC,KAHJ,GAIE,GAEGxI,EAAAA,SAAS,CAAEsJ,WAAY,OAIhCE,EAAAA,aAAe,SAAK,GACbxJ,EAAAA,SAAS,CAAEsJ,WAAY7F,EAAEC,OAAOC,SACtC,EAAA,EAAA,GAmCY,OAAA,EAAA,EAxDOpB,EAAMC,QAAAA,eAwDb,EAAA,EAAA,CAAA,CAAA,IAAA,SAjCJ,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,OAAM,CAAA,SAAU,SAAA,GAAK,OAAA,EAAK4G,aAAa3F,KACpC,EAAA,QAAA,cAAA,EAAD,CACY,UAAA,KACL,KAAA,OACO,YAAA,kBACL,MAAA,KAAK3D,MAAMwJ,WACR,SAAA,SAAA,GAAK,OAAA,EAAKE,aAAa/F,WAyB5B,EAxDT0F,GAuCAM,GAAc,EAAO,EAAA,SAAA,SAArB,WAAA,CAAA,YAAA,uBAAA,YAAA,gBAAc,CAApB,CAAA,mIAWMzG,EAAqB,SAAA,GAAa,MAAA,CAAA,cACxB0G,SAAAA,EAAS/M,GACZ,GAAA,EAAQ+M,EAAAA,SAAAA,EAAS/M,OAIf,QAAA,SAAA,EACb,EAAA,SAAA,KACAqG,EAFa,CAGbmG;;AC0Ja,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GA3Nf,EAAA,QAAA,SA2Ne,EAAA,EAAA,GA1Nf,EAAA,QAAA,eACA,EAAA,QAAA,qBAyNe,EAAA,EAAA,GAxNf,EAAA,QAAA,YACA,EAAA,QAAA,kBAuNe,EAAA,EAAA,GArNf,EAAA,QAAA,0BAEA,EAAA,QAAA,wCACA,EAAA,QAAA,sCAEA,EAAA,QAAA,oBAgNe,EAAA,EAAA,GA/Mf,EAAA,QAAA,iBA+Me,EAAA,EAAA,GA9Mf,EAAA,QAAA,mBACA,EAAA,QAAA,yBA6Me,EAAA,EAAA,GA5Mf,EAAA,QAAA,gBA4Me,EAAA,EAAA,GA3Mf,EAAA,QAAA,aA2Me,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAzMf,IAAMQ,EAAU,WAAM,OAAA,EAAC,QAAA,cAAA,EAAD,QAAN,OAEVC,GAA4B,EAAS,EAAA,SAAA,CACjC,OAAA,WAAM,OAAA,QAAO,iBAAP,CAAO,QAAA,QAAA,yBACrBD,QAAAA,IAGIE,EAAAA,SAAAA,GAkMS,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAjMb/J,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACW,iBAAA,GAGnBgK,EAAAA,eAAiB,SAAc,GACzBR,EAAW9K,OAAS,EACjB8C,EAAAA,MAAMyI,mBAAmB,EAAKzI,MAAM0I,YAAY9H,GAAIoH,GAEnD,MAAA,8CAIVlG,EAAAA,WAAa,WACN9B,EAAAA,MAAM2I,iBACT,EAAK3I,MAAM0I,YAAY9H,GACvB,EAAKZ,MAAM+B,aAIfqF,EAAAA,gBAAkB,SAAQ,GACnBpH,EAAAA,MAAM4I,iBAAgB,EAAM9I,EAAKc,KAGxCiI,EAAAA,aAAe,WACR7I,EAAAA,MAAM4I,iBAAgB,EAAO,KAGpCzB,EAAAA,oBAAsB,SAAC/I,EAAQ0K,GACxBpK,EAAAA,SAAS,CAAE4I,gBAAoBwB,EAAU1K,IAAAA,KAGhD2K,EAAAA,qBAAuB,WAChBrK,EAAAA,SAAS,CAAEsK,kBAAkB,KAGpCC,EAAAA,qBAAuB,WAIdC,OAHY,EAAKlJ,MAAM0I,YAAYzI,MAAMO,OAC9C,SAAA,GAAQf,OAAAA,EAAKzB,UAEKd,QACrB,EAAA,EAAA,GAyJY,OAAA,EAAA,EAlMK+D,EAAMC,QAAAA,eAkMX,EAAA,EAAA,CAAA,CAAA,IAAA,SAvJJ,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACG,EAAA,QAAA,cAAA,EAAD,CACa,UAAA,KAAKlB,MAAM+D,UACf,MAAA,KAAK/D,MAAM0I,YAAYS,KACf,cAAA,KAAKX,eACH,iBAAA,cAElB,EAAA,QAAA,cAAA,EAAD,OAAA,CACO,KAAA,SACU,cAAA,WAAM,OAAA,EAAK1G,cACrB,KAAA,WAEN,EAAA,QAAA,cAAA,EAAD,QAAA,CACU,OAAA,KAAK9B,MAAMiC,OACC,mBAAA,KAAKjC,MAAMkC,qBAEjC,EAAA,QAAA,cAAA,EAAA,KACE,EAAA,QAAA,cAAA,EAAqB,CAAA,QAAS,WAAM,OAAA,EAAKlC,MAAMoJ,sBACvCpJ,KAAAA,MAAMqJ,cACiB,yBAAA,KAAKJ,uBACL,IAAA,yBAAA,KAAKA,uBAFjC,KAIH,EAAA,QAAA,cAAA,EAAA,CACK,GAAA,SACQ,UAAA,KAAKjJ,MAAM0I,YAAYvH,MACvB,UAAA,KAAKnB,MAAMsJ,YAAc,MAAQ,QAE5C,EAAA,QAAA,cAAA,KAAA,KACQtJ,KAAAA,MAAM0I,YAAYzI,MAAMV,IAAI,SAAA,GAChC,OAAA,EAAC,QAAA,cAAA,EAAD,QAAA,CACOO,IAAAA,EAAKc,GACJd,KAAAA,EACW,gBAAA,EAAKsH,gBACX,UAAA,EAAKpH,MAAM0I,YAAYvH,MACb,oBAAA,EAAKgG,oBAExB,gBAAA,QAAQrH,EAAKc,KAAS,EAAKpC,MAAM8I,iBACjC,EAAK9I,MAAM8I,gBAEL,OAAA,EAAKtH,MAAM0I,YAAY9H,GACX,mBAAA,EAAKZ,MAAMiH,mBACrB,UAAA,EAAKjH,MAAMqJ,kBAGxB,EAAA,QAAA,cAAA,EAAD,QAAA,CACW,QAAA,KAAKrJ,MAAM0H,QACZ,OAAA,KAAK1H,MAAM0I,YAAY9H,GACX,mBAAA,KAAKZ,MAAMiH,qBAE5BvK,GAAAA,OAAAA,EAAAA,MAAM,KAAKsD,MAAMuJ,yBAAwBhK,IAAI,SAAC4C,EAAG4C,GACpD,OAAA,EAAI,QAAA,cAAA,KAAA,CAAA,IAAKA,EAAG,UAAiB,IAANA,EAAU,kBAAoB,aAIrD/E,KAAAA,MAAMsJ,aACV,EAAC,QAAA,cAAA,EAAD,CACQ,KAAA,KAAKtJ,MAAMwJ,YACA,gBAAA,KAAKxJ,MAAM4I,gBACjB,UAAA,KAAK5I,MAAM0I,YAAYvH,MACpB,aAAA,KAAK0H,aACE,oBAAA,KAAK1B,oBACT,gBAAA,KAAKC,gBACd,OAAA,KAAKpH,MAAM0I,YAAY9H,GACX,mBAAA,KAAKZ,MAAMiH,2BAsF9B,EAlMTsB,GAsHAkB,GAAmB,EAAO,EAAA,SAAA,OAA1B,WAAA,CAAA,YAAA,0BAAA,YAAA,gBAAmB,CAAzB,CAAA,uDAMMC,GAAsB,EAAO,EAAA,SAAA,OAA7B,WAAA,CAAA,YAAA,6BAAA,YAAA,gBAAsB,CAIZrI,CAAAA,yDAAAA,gEAAAA,MAAAA,EAAOC,OAAAA,OAIL,EAAO,EAAA,QAAA,IAAMD,EAAOC,OAAAA,QAIhCsC,GAAoB,EAAOF,EAAAA,SAAAA,EAAP,SAApB,WAAA,CAAA,YAAA,2BAAA,YAAA,gBAAoB,CASKrC,CAAAA,4KAAAA,MAAAA,EAAOG,OAAAA,WAIhCmI,GAAa,EAAO,EAAA,SAAA,OAApB,WAAA,CAAA,YAAA,oBAAA,YAAA,gBAAa,CAGStI,CAAAA,2DAAAA,eAAAA,sCAAAA,gDAAAA,qDAAAA,iDAAAA,yDAAAA,yDAAAA,QAAAA,EAAOG,OAAAA,WACnB,EAAQ,EAAA,SAAA,KAAOH,EAAOC,OAAAA,OAG3B,SAAA,GAAStB,OAAAA,EAAM4J,WAEF,SAAA,GAAS,OAAA,EAAQ,EAAA,SAAA,GAAK5J,EAAMuB,YAK5B,SAAA,GAAS,OAAA,EAAQ,EAAA,SAAA,GAAKvB,EAAMuB,YAI5B,SAAA,GAASvB,OAAAA,EAAMuB,YAIR,EAAQ,EAAA,SAAA,GAAKF,EAAOG,OAAAA,YAInB,EAAQ,EAAA,SAAA,GAAKH,EAAOG,OAAAA,YAM9CC,EAAkB,SAAA,GAAgB,MAAA,CACtC1B,MADyBA,EAAAA,QAIrB2B,EAAqB,SAAA,GAAa,MAAA,CAAA,mBACnBrG,SAAAA,EAAQwG,GAChB,GAAA,EAAaxG,EAAAA,cAAAA,EAAQwG,KAFM,iBAIrBxG,SAAAA,EAAQ0G,GACd,GAAA,EAAW1G,EAAAA,YAAAA,EAAQ0G,OAIjB,QAAA,SAAA,EACbN,EAAAA,SAAAA,EACAC,EAFa,CAGb6G;;ACzNK,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,OAAA,EALP,EAAA,QAAA,yBAEA,EAAA,QAAA,wBACA,EAAA,QAAA,6BAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAMsB,EAAU,QAAA,QAAA,SAACC,EAASC,EAAU7O,GAApB,OAA+B,EAAA,EAAA,mBAAA,KAAA,SAAML,EAAAA,GAAN,IAAA,EAAA,EAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,GACvC,EADuC,EAAA,YAAA,EAEtC,GAFsC,EAGhC,CACZiP,KAAAA,EACFzO,GAAAA,EACG2O,MAAAA,EAAWD,WAAAA,GACH,eAAA,EAJG,EAAA,YAKX7O,MAAAA,GAAU,GACV,MAAA,CAAEuF,SAAU,CAAEA,UAAU,KAEhBpF,EAAAA,SAAAA,GAAY4O,EAEjBhM,EAAAA,YAAAA,OAAOC,GAbiC,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAA/B,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAA+B;;ACD/C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAAA,IAAA,OAAA,EAJP,EAAA,QAAA,yBAEA,EAAA,QAAA,6BAEO,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,OAAA,IAAA,SAAA,GAAA,EAAA,QAAA,KAAA,EAAA,GAAA,CAAA,WAAA,IAAMgM,EAAkB,QAAA,gBAAA,SAAC7O,EAAQ0O,GAAT,OAAsB,EAAA,EAAA,mBAAA,KAAA,SAAMlP,EAAAA,GAAN,IAAA,EAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,EACrC,GADqC,EAEvCmP,EAAWD,WAAAA,GAEN1O,EAAAA,SAAAA,EAAkB8F,UAAAA,EAEvBlD,EAAAA,YAAAA,OAAOC,GANgC,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,MAAtB,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAAsB;;ARJrD,aAEAgC,OAAOmE,eAAeC,QAAS,aAAc,CAC3CjC,OAAO,IAGT,IAAIkC,EAASC,QAAQ,SAEjBC,EAAUC,EAAuBH,GAErC,SAASG,EAAuBC,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAEvF,SAASG,IASL,OARFA,EAAW5E,OAAO4D,QAAU,SAAU1B,GACpC,IAAK,IAAI2C,EAAI,EAAGA,EAAIC,UAAU9H,OAAQ6H,IAAK,CACzC,IAAIE,EAASD,UAAUD,GAAG,IAAK,IAAI3B,KAAO6B,EACpC/E,OAAOgF,UAAUC,eAAeC,KAAKH,EAAQ7B,KAC/ChB,EAAOgB,GAAO6B,EAAO7B,IAG1B,OAAOhB,IACQiD,MAAMC,KAAMN,WAGhC,IAAIO,EAEJd,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,uOACH0E,KAAM,YAGJzE,EAEJjB,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,0EACH0E,KAAM,YAGJC,EAEJ3F,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,yJACH0E,KAAM,YAGJE,EAEJ5F,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,6DACH0E,KAAM,YAGJG,EAEJ7F,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,sNACH0E,KAAM,YAGJI,EAEJ9F,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,kEACH0E,KAAM,YAGJK,EAEJ/F,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,oKACH0E,KAAM,YAGJM,EAEJhG,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,qOACH0E,KAAM,YAGJO,EAEJjG,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,4DACH0E,KAAM,YAGJQ,EAEJlG,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,0JACH0E,KAAM,YAGJS,EAEJnG,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,iKACH0E,KAAM,YAGJU,EAEJpG,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,iGACH0E,KAAM,YAGJW,EAEJrG,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,2OACH0E,KAAM,YAGJY,EAEJtG,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,gLACH0E,KAAM,YAGJa,EAEJvG,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,+JACH0E,KAAM,YAGJc,EAEJxG,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,4GACH0E,KAAM,YAGJe,EAEJzG,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,qHACH0E,KAAM,YAGJgB,EAEJ1G,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,oDACH0E,KAAM,SAGJiB,EAEJ3G,EAAQI,QAAQW,cAAc,OAAQ,CACpCC,EAAG,ySACH0E,KAAM,YAGJkB,EAAwB,SAA+BrL,GACzD,OAAOyE,EAAQI,QAAQW,cAAc,MAAOV,EAAS,CACnDc,QAAS,uBACR5F,GAAQuF,EAAMG,EAAO0E,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,IAGnJ9G,QAAQO,QAAUwG;;AS3EHC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAvFf,EAAA,QAAA,SAuFeA,EAAAA,EAAAA,GAtFf,EAAA,QAAA,qBAsFeA,EAAAA,EAAAA,GArFf,EAAA,QAAA,YAEA,EAAA,QAAA,6BACA,EAAA,QAAA,gDAkFeA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,EAAAA,EAxFf,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAQMA,IAAAA,EAAAA,SAAAA,GAgFSA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA/Eb9M,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACa,mBAAA,GAGrB+M,EAAAA,kBAAoB,SAAClQ,EAAQmQ,GACtBxL,EAAAA,MAAMuL,kBAAkBlQ,EAAQmQ,GAChC9M,EAAAA,SAAS,CACO,mBAAC,EAAKF,MAAMiN,qBAElC,EAAA,EAAA,GAsEYH,OAAAA,EAAAA,EAhFarK,EAAMC,QAAAA,eAgFnBoK,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SApEJ,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACG,EAAA,QAAA,cAAA,EAAD,CACM,IAAA,eACC,KAAA,SACO,WAAA,WACV,OAAA,EAAK5M,SAAS,CACO,mBAAC,EAAKF,MAAMiN,qBAG1B,QAAA,WACP,OAAA,EAAK/M,SAAS,CACO,mBAAC,EAAKF,MAAMiN,qBAG1B,SAAA,MAELjN,KAAAA,MAAMiN,mBACV,EAAA,QAAA,cAAA,EAAA,KACUtL,OAAAA,KAAK6J,EAAZ,YAAwBzK,IAAI,SAACiM,EAAWzG,GACvC,OAAA,EAAC,QAAA,cAAA,EAAD,CACOA,IAAAA,EACE,MAAA,CAAE2G,gBAAiB1B,EAAWwB,WAAAA,IAC5B,QAAA,WACP,OAAA,EAAKD,kBAAkB,EAAKvL,MAAM2L,KAAK/K,GAAI4K,cA2C9CF,EAhFTA,GAiDAM,GAAY,EAAOC,EAAAA,SAAAA,EAAP,SAAZ,WAAA,CAAA,YAAA,2BAAA,YAAA,YAAY,CAAlB,CAAA,0GASMtF,GAAkB,EAAO,EAAA,SAAA,MAAzB,WAAA,CAAA,YAAA,iCAAA,YAAA,YAAkB,CAMIlF,CAAAA,8FAAAA,eAAAA,6BAAAA,EAAOG,OAAAA,WACnB,EAAQ,EAAA,SAAA,KAAOH,EAAOC,OAAAA,QAKhCkF,GAAmB,EAAO,EAAA,SAAA,MAA1B,WAAA,CAAA,YAAA,kCAAA,YAAA,YAAmB,CAAzB,CAAA,oGAUe8E,QAAAA,QAAAA;;ACsBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GA9Gf,EAAA,QAAA,SA8Ge,EAAA,EAAA,GA7Gf,EAAA,QAAA,qBA6Ge,EAAA,EAAA,GA5Gf,EAAA,QAAA,eAEA,EAAA,QAAA,0BAEA,EAAA,QAAA,mBACA,EAAA,QAAA,0BAuGe,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GArGTQ,IAAAA,EAAAA,SAAAA,GAqGS,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GApGbtN,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACM,WAAA,GACA,WAAA,aAGd0J,EAAAA,aAAe,SAAK,GACd6D,IAAAA,EAAW5J,EAAEC,OAAOC,MACnB3D,EAAAA,SAAS,CAAEsJ,WAAY+D,KAG9BC,EAAAA,cAAgB,SAAK,GACjBjE,EAAAA,iBAC2B,IAAzB,EAAKvJ,MAAMwJ,YAAoB,EAAKxJ,MAAMwJ,WAAW9K,OAAS,IAC3D8C,EAAAA,MAAMgM,cACT,EAAKxN,MAAMwJ,WACX,EAAKxJ,MAAMyN,WACX,EAAKjM,MAAMkM,KAAKC,KAEbzN,EAAAA,SAAS,CAAEsJ,WAAY,GAAIiE,WAAY,gBAIhDG,EAAAA,eAAiB,SAACT,EAAMxK,GACjBzC,EAAAA,SAAS,CAAEuN,WAAY9K,KAC7B,EAAA,EAAA,GA4EY,OAAA,EAAA,EArGOF,EAAMC,QAAAA,eAqGb,EAAA,EAAA,CAAA,CAAA,IAAA,SA1EJ,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACE,EAAA,QAAA,cAAA,EAAA,CACa8I,UAAAA,EAAW,WAAA,KAAKxL,MAAMyN,YACnB,aAA0B,KAA1B,KAAKzN,MAAMwJ,WAAoB,MAAQ,QAErD,EAAA,QAAA,cAAA,MAAK,CAAA,UAAU,gBACb,EAAA,QAAA,cAAA,QAAA,CACa,YAAA,KAAKhI,MAAMqM,UACjB,KAAA,OACO,YAAA,kBACL,MAAA,KAAK7N,MAAMwJ,WACR,SAAA,SAAA,GAAK,OAAA,EAAKE,aAAa/F,OAEjC,KAAKnC,MAAMsM,mBACX,EAAC,QAAA,cAAA,EAAD,QAAe,CAAA,kBAAmB,KAAKF,kBAG1C,EAAA,QAAA,cAAA,EAAD,OAAA,CACS,MAAA,CAAEV,gBAAiB,QACX,cAAA,SAAA,GAAK,OAAA,EAAKM,cAAc7J,IACjC,KAAA,KAAKnC,MAAMzC,aAoDd,EArGTuO,GA0DAS,GAAa,EAAO,EAAA,SAAA,QAApB,WAAA,CAAA,YAAA,sBAAA,YAAA,gBAAa,CAwBK,CAAA,iXAAA,qCAAA,2GAAA,MAAA,SAAA,GAASvM,OAAAA,EAAMuB,WAIrB,SAAA,GAASvB,OAAAA,EAAMuB,WAQnB,SAAA,GAASvB,OAAAA,EAAMwM,eAIvB/K,EAAkB,SAAA,GAAe,MAAA,CACrCyK,KADyBA,EAAAA,OAGZ,QAAA,SAAA,EACbzK,EAAAA,SAAAA,EACA,KAFa,CAGbqK;;ACqBa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAtIf,EAAA,QAAA,SAsIe,EAAA,EAAA,GArIf,EAAA,QAAA,eACA,EAAA,QAAA,qBAoIe,EAAA,EAAA,GAnIf,EAAA,QAAA,YAEA,EAAA,QAAA,0BAEA,EAAA,QAAA,mCACA,EAAA,QAAA,2CACA,EAAA,QAAA,sCA6He,EAAA,EAAA,GA3Hf,EAAA,QAAA,0BA2He,EAAA,EAAA,GA1Hf,EAAA,QAAA,aA0He,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAxHTW,IAAAA,EAAAA,SAAAA,GAwHS,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAvHbC,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,iBAAmB,SAAU,GACtB1M,EAAAA,MAAM0M,iBAAiBrR,GAE1B,WAAA,WACO2E,KAAAA,MAAMiH,sBACXC,KAHJ,GAIE,IAIJyF,EAAAA,mBAAqB,WACb5M,IAAAA,EAAU,EAAKC,MAAfD,MACF6M,EAAa,GAOVA,OANAzM,OAAAA,KAAKJ,GAAOR,IAAI,SAAA,GAAQqN,OAAAA,EAAWtM,KAAKP,EAAM4L,MAE1CkB,EAAAA,KAAK,SAASC,EAAGC,GACnB,OAAA,IAAIlR,KAAKiR,EAAEE,eAAiB,IAAInR,KAAKkR,EAAEC,iBAGzCJ,GACR,EAAA,EAAA,GAmGY,OAAA,EAAA,EAxHY3L,EAAMC,QAAAA,eAwHlB,EAAA,EAAA,CAAA,CAAA,IAAA,SAjGJ,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACE,EAAA,QAAA,cAAA,KAAA,KAAA,UACA,EAAA,QAAA,cAAA,EAAA,KACQyL,KAAAA,qBAAqBpN,IAAI,SAACoM,EAAM5G,GACpC,OAAA,EAAA,QAAA,cAAA,EAAY,CAAA,IAAKA,GACf,EAAA,QAAA,cAAA,EAAA,CACY,UAAA,gBACC4G,UAAAA,EAAKxK,MACP,QAAA,WAAM,OAAA,EAAKuL,iBAAiBf,EAAK/K,MAE1C,EAAA,QAAA,cAAA,MAAK,CAAA,UAAU,gBACb,EAAA,QAAA,cAAA,OAAA,KAAYuI,EAAAA,MACX,EAAA,QAAA,cAAA,EAAD,QAAA,CACQwC,KAAAA,EACa,kBAAA,EAAK3L,MAAMuL,yBAMvC,EAAA,QAAA,cAAA,EAAD,QAAA,CACa,WAAA,EACI,cAAA,KAAKvL,MAAMiN,cACrB,KAAA,YAwEF,EAxHTR,GAyDAS,GAAW,EAAO,EAAA,SAAA,MAAlB,WAAA,CAAA,YAAA,yBAAA,YAAA,eAAW,CAOO,CAAA,+HAAA,sDAAA,iDAAA,OAAA,EAAQ,EAAA,SAAA,GAAK7L,EAAOgG,OAAAA,UAKpB,EAAQ,EAAA,SAAA,GAAKhG,EAAOgG,OAAAA,SAIpBhG,EAAOgG,OAAAA,SAIzB8F,GAAa,EAAO,EAAA,SAAA,MAApB,WAAA,CAAA,YAAA,2BAAA,YAAA,eAAa,CAAnB,CAAA,qIAaMC,GAAe,EAAO,EAAA,SAAA,UAAtB,WAAA,CAAA,YAAA,6BAAA,YAAA,eAAe,CAOQ,CAAA,8GAAA,gEAAA,SAAA,GAASpN,OAAAA,EAAMuB,YAOtCE,EAAkB,SAAA,GAAgB,MAAA,CACtC1B,MADyBA,EAAAA,QAIrB2B,EAAqB,SAAA,GAAa,MAAA,CAAA,cACxBoI,SAAAA,EAASC,EAAU7O,GACtB,GAAA,EAAQ4O,EAAAA,SAAAA,EAASC,EAAU7O,KAFA,kBAIpBG,SAAAA,EAAQ0O,GACf,GAAA,EAAgB1O,EAAAA,iBAAAA,EAAQ0O,KAEjB,iBAAA,SAAU,GACjB,GAAA,EAAW1O,EAAAA,SAAAA,OAIT,QAAA,SAAA,EACboG,EAAAA,SAAAA,EACAC,EAFa,CAGb+K;;ACzDa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAhFf,EAAA,QAAA,SAgFe,EAAA,EAAA,GA/Ef,EAAA,QAAA,qBA+Ee,EAAA,EAAA,GA9Ef,EAAA,QAAA,eACA,EAAA,QAAA,YAEA,EAAA,QAAA,0BAEA,EAAA,QAAA,mCAEA,EAAA,QAAA,mBACA,EAAA,QAAA,aAsEe,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GApETY,IAAAA,EAAAA,SAAAA,GAoES,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GAnEb7O,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACO,aAAA,GAGfyO,EAAAA,cAAgB,SAACnD,EAASC,EAAU7O,GAC7B8E,EAAAA,MAAMiN,cAAcnD,EAASC,EAAU7O,GACvCwD,EAAAA,SAAS,CAAE4O,aAAa,KAC9B,EAAA,EAAA,GA4DY,OAAA,EAAA,EApEOrM,EAAMC,QAAAA,eAoEb,EAAA,EAAA,CAAA,CAAA,IAAA,SA1DJ,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,EAAA,KACQ1C,KAAAA,MAAM8O,YACV,EAAC,QAAA,cAAA,EAAD,QAAA,CAAA,mBAAA,EAEa,WAAA,EACI,cAAA,KAAKL,cACf,KAAA,MAGP,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACE,EAAA,QAAA,cAAA,KAAA,KAAA,0BACC,EAAA,QAAA,cAAA,EAAD,OAAA,CACY,UAAA,cACL,KAAA,MACU,cAAA,WAAM,OAAA,EAAKvO,SAAS,CAAE4O,aAAa,KAC7C,KAAA,sBAyCJ,EApETD,GAqCAE,GAAgB,EAAO,EAAA,SAAA,OAAvB,WAAA,CAAA,YAAA,yBAAA,YAAA,eAAgB,CAGMlM,CAAAA,2DAAAA,eAAAA,sKAAAA,EAAOG,OAAAA,WACnB,EAAQ,EAAA,SAAA,KAAOH,EAAOC,OAAAA,QAqBhCI,EAAqB,SAAA,GAAa,MAAA,CAAA,cACxBoI,SAAAA,EAASC,EAAU7O,GACtB,GAAA,EAAQ4O,EAAAA,SAAAA,EAASC,EAAU7O,OAIzB,QAAA,SAAA,EACb,EAAA,SAAA,KACAwG,EAFa,CAGb2L;;ACgJa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAnOf,EAAA,QAAA,SAmOe,EAAA,EAAA,GAlOf,EAAA,QAAA,qBAkOe,EAAA,EAAA,GAjOf,EAAA,QAAA,eAEA,EAAA,QAAA,sCACA,EAAA,QAAA,sCA8Ne,EAAA,EAAA,GA5Nf,EAAA,QAAA,oBA4Ne,EAAA,EAAA,GA3Nf,EAAA,QAAA,kBA2Ne,EAAA,EAAA,GA1Nf,EAAA,QAAA,WA0Ne,EAAA,EAAA,GAzNf,EAAA,QAAA,kBAyNe,EAAA,EAAA,GAxNf,EAAA,QAAA,aAwNe,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,kEAAA,GAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,IAAA,OAAA,eAAA,OAAA,eAAA,EAAA,GAAA,EAAA,UAAA,GAtNTG,IAAAA,EAAAA,SAAAA,GAsNS,SAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,UAAA,OAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,UAAA,GArNbhP,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACiB,sBAAA,EACV,aAAA,EACA,YAAA,GACL,OAAA,iBACO,eAAA,GAcjBiP,EAAAA,eAAiB,WACX1N,IAAAA,EAAa,EAAA,GAAA,EAAKC,MAAMD,OAExB2N,EAAWxN,OAAOC,KAAKJ,GAAOS,OAChC,SAAA,GAAQT,OAAAA,EAAM4L,GAAM/K,KAAO,EAAKZ,MAAM7E,aAGpC8E,EAAQF,EAAM2N,GAAUzN,MACxB0N,EAAa,GASV5N,OARAI,OAAAA,KAAKF,GACTO,OAAO,SAAA,GAAQ,OAACP,EAAMR,GAAM0F,eAAe,cAC3C5F,IAAI,SAAA,GAAWoO,OAAAA,EAAWrN,KAAKL,EAAM2N,MAEnC3L,EAAAA,OAAO0L,GAEND,EAAAA,GAAUzN,MAAQ0N,EAEjB5N,EAAM2N,IAGfzL,EAAAA,OAAS,SAAc,GAmCd0L,MAlCmB,mBAAtB,EAAKnP,MAAMyD,OACF4K,EAAAA,KAAK,SAASC,EAAGC,GACnBA,OAAAA,EAAE5G,SAAW2G,EAAE3G,WAEO,uBAAtB,EAAK3H,MAAMyD,OACT4K,EAAAA,KAAK,SAASC,EAAGC,GACtBc,IAAAA,EAAQf,EAAEhN,KAAKtC,cACjBsQ,EAAQf,EAAEjN,KAAKtC,cACbqQ,OAAAA,EAAQC,GAEF,EACND,EAAQC,EAAc,EACnB,IAEsB,uBAAtB,EAAKtP,MAAMyD,OACT4K,EAAAA,KAAK,SAASC,EAAGC,GACtBc,IAAAA,EAAQf,EAAEhN,KAAKtC,cACjBsQ,EAAQf,EAAEjN,KAAKtC,cACbqQ,OAAAA,EAAQC,EAEH,EACLD,EAAQC,GAAe,EACpB,IAEsB,WAAtB,EAAKtP,MAAMyD,OACT4K,EAAAA,KAAK,SAASC,EAAGC,GACnB,OAAA,IAAIlR,KAAKkR,EAAEgB,YAAc,IAAIlS,KAAKiR,EAAEiB,cAEd,WAAtB,EAAKvP,MAAMyD,QACT4K,EAAAA,KAAK,SAASC,EAAGC,GACnB,OAAA,IAAIlR,KAAKiR,EAAEiB,YAAc,IAAIlS,KAAKkR,EAAEgB,cAIxCJ,GAGT1G,EAAAA,mBAAqB,WACfyG,IAAAA,EAAW,EAAKD,iBAChBO,EAAkBC,SAASC,cAAc,WAAWC,aAEpDC,EAAW7S,KAAK8S,MAAML,EADT,IAEbN,GAAAA,EAASzN,MAAM/C,OAASkR,EAAU,CAChC7E,IAAAA,EAAwB6E,EAAWV,EAASzN,MAAM/C,OACjDwB,EAAAA,SAAS,CAAE6K,sBAAF,GAA2B,mBAEpC7K,EAAAA,SAAS,CAAE6K,sBAAuB,GAAK,eAIhD+E,EAAAA,0CAA4C,WACtCvO,IAAAA,EAAa,EAAA,GAAA,EAAKC,MAAMD,OACxB2N,EAAWxN,OAAOC,KAAKJ,GAAOS,OAChC,SAAA,GAAQT,OAAAA,EAAM4L,GAAM/K,KAAO,EAAKZ,MAAM7E,aACtC,GACEoT,EAAcrO,OAAOC,KAAK,EAAKH,MAAMD,OAAO7C,OAAS,EACrDsR,EAAgBtO,OAAOC,KAAKJ,GAAO0O,QAAQf,GAAY,EAMpDgB,OAJLF,EAAgBD,EACZxO,EAAMG,OAAOC,KAAKJ,GAAO,IAAIa,GAC7Bb,EAAMG,OAAOC,KAAKJ,GAAOyO,IAAgB5N,IAKjDgI,EAAAA,gBAAkB,SAACU,EAAaqF,GACnB,WAAA,WACL1O,IAAAA,EAAQ,EAAKwN,iBAAiBxN,MAC9B0N,EAAa,GACVxN,OAAAA,KAAKF,GAAOV,IAAI,SAAA,GAAWoO,OAAAA,EAAWrN,KAAKL,EAAM2N,MACpDpE,IAAAA,EAAcmE,EAAWnN,OAAO,SAAA,GAAQf,OAAAA,EAAKmB,KAAO+N,IAAe,GAClEjQ,EAAAA,SAAS,CAAE4K,YAAF,EAAeE,YAAf,GAA8B,eAC3C,IAGLtH,EAAAA,mBAAqB,SAAU,GACxBxD,EAAAA,SAAS,CAAEuD,OAAF,GAAY,eAG5BmH,EAAAA,kBAAoB,WACb1K,EAAAA,SAAS,CAAE2K,eAAgB,EAAK7K,MAAM6K,iBAI5C,EAAA,EAAA,GAyFY,OAAA,EAAA,EAtNSpI,EAAMC,QAAAA,eAsNf,EAAA,EAAA,CAAA,CAAA,IAAA,oBA7MO,MAAA,WACblB,KAAAA,MAAM4O,iBAAiB,KAAK5O,MAAMkM,KAAKC,KAEtB,WAApB,KAAKnM,MAAMD,OACXG,OAAOC,KAAK,KAAKH,MAAMD,OAAO7C,OAAS,IAElC+J,KAAAA,qBACAqH,KAAAA,+CAsMI,CAAA,IAAA,SAvFJ,MAAA,WAEL,OAAA,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACG,EAAA,QAAA,cAAA,EAAD,QAAc,CAAA,MAAO,KAAKtO,MAAMD,QAChC,EAAA,QAAA,cAAA,EAAA,CACa,UAAA,KAAKvB,MAAM8K,YAAc,WAAa,cAE3B,YAAhBtJ,KAAAA,MAAMD,MACV,EAAC,QAAA,cAAA,EAAD,QADD,MAEGG,OAAOC,KAAK,KAAKH,MAAMD,OAAO7C,OAAS,EACzC,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACG,EAAA,QAAA,cAAA,EAAD,QAAA,CACe,YAAA,KAAKuQ,iBACN,WAAA,KAAKa,4CACE,kBAAA,KAAKlF,kBACT,cAAA,KAAK5K,MAAM6K,cACH,sBAAA,KAAK7K,MAAM+K,sBACd,mBAAA,KAAKtC,mBACZ,YAAA,KAAKzI,MAAM8K,YACP,gBAAA,KAAKV,gBACT,YAAA,KAAKpK,MAAMgL,YAChB,OAAA,KAAKhL,MAAMyD,OACC,mBAAA,KAAKC,qBAE1B,EAAA,QAAA,cAAA,EAAD,QAAc,CAAA,mBAAoB,KAAK+E,sBAGzC,EAAC,QAAA,cAAA,EAAD,QAAA,YA4DG,EAtNTuG,GAmKAqB,GAAmBC,EAAAA,EAAnB,WAAN,CAAA,mCASMC,GAAoBD,EAAAA,EAApB,WAAN,CAAA,mCASME,GAAkB,EAAO,EAAA,SAAA,OAAzB,WAAA,CAAA,YAAA,6BAAA,YAAA,gBAAkB,CAMPH,CAAAA,+FAAAA,gDAAAA,yFAAAA,EAGAE,GASXtN,EAAkB,SAAA,GAAkC,MAAA,CAAA,MAA/B1B,EAAAA,MAA+B,WAAxB5E,EAAAA,WAGhC+Q,KAH4CA,EAAAA,OAMxCxK,EAAqB,SAAA,GAAa,MAAA,CAAA,iBACrBrG,SAAAA,GACN,GAAA,EAAWA,EAAAA,SAAAA,KAFgB,iBAIrBH,SAAAA,GACN,GAAA,EAAWA,EAAAA,YAAAA,OAIT,QAAA,SAAA,EACbuG,EAAAA,SAAAA,EACAC,EAFa,CAGb8L","file":"ToDosPage.9d3808b5.map","sourceRoot":"..\\src","sourcesContent":["import { todosRef } from \"../../config/firebase\";\r\n\r\nexport const fetchToDos = userId => async (dispatch, getState) => {\r\n  todosRef.on(\"value\", snapshot => {\r\n    dispatch({\r\n      type: \"FETCH_TO_DOS\",\r\n      lists: snapshot.val(),\r\n      userId: userId,\r\n      activeList: getState().activeList\r\n    });\r\n  });\r\n};\r\n","export default function selectList(listId) {\r\n  return {\r\n    type: \"CHANGE_ACTIVE_LIST\",\r\n    listId\r\n  };\r\n}\r\n","export const randomId = () =>\r\n  Math.random()\r\n    .toString(36)\r\n    .slice(-10);\r\n\r\nexport const dateTransformation = dateTime => {\r\n  if (dateTime) {\r\n    let date = new Date(dateTime);\r\n    return date.toDateString();\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const dateCalendarTransformation = dateTime => {\r\n  if (dateTime) {\r\n    let date = new Date(dateTime);\r\n    let dateYear = date.getFullYear()\r\n    let dateDate = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\r\n    let dateHours = date.getHours() === 0 ? \"00\" : date.getHours();\r\n    let dateMinutes = date.getMinutes() === 0 ? \"00\" : date.getMinutes();\r\n\r\n    let months = new Array();\r\n    months[0] = \"Jan\";\r\n    months[1] = \"Feb\";\r\n    months[2] = \"Mar\";\r\n    months[3] = \"Apr\";\r\n    months[4] = \"May\";\r\n    months[5] = \"Jun\";\r\n    months[6] = \"Jul\";\r\n    months[7] = \"Aug\";\r\n    months[8] = \"Sep\";\r\n    months[9] = \"Oct\";\r\n    months[10] = \"Nov\";\r\n    months[11] = \"Dec\";\r\n    let dateMonth = months[date.getMonth()];\r\n\r\n    let dateFinal = `${dateDate}/${dateMonth}/${dateYear} ${dateHours}:${dateMinutes}`\r\n\r\n    return dateFinal;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const dateTimeTransformation = dateTime => {\r\n  if (dateTime) {\r\n    let date = new Date(dateTime);\r\n    let dateTransformed = date.toUTCString();\r\n    return dateTransformed.substring(0, dateTransformed.length - 7);\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const currTime = () =>\r\n  new Date(new Date().toString().split(\"GMT\")[0] + \" UTC\")\r\n    .toISOString()\r\n    .split(\".\")[0];\r\n\r\nexport const slugify = text =>\r\n  text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n","import { databaseRef } from \"../../config/firebase\";\r\n\r\nexport const checkItem = (itemToCheck, listId) => async dispatch => {\r\n  let updates = {};\r\n\r\n  databaseRef\r\n    .child(`lists/${listId}/items/${itemToCheck}`)\r\n    .once(\"value\")\r\n    .then(function(snapshot) {\r\n      let checkedStatus = snapshot.val() && snapshot.val().checked;\r\n\r\n      updates[`lists/${listId}/items/${itemToCheck}/checked`] = !checkedStatus;\r\n      updates[`lists/${listId}/items/${itemToCheck}/reminder_set`] = false;\r\n      databaseRef.update(updates);\r\n    });\r\n};\r\n","import { databaseRef } from \"../../config/firebase\";\r\n\r\nexport const ignoreReminderItem = (taskId, listId) => async dispatch => {\r\n  let updates = {};\r\n\r\n  updates[`lists/${listId}/items/${taskId}/reminder_set`] = false;\r\n\r\n  databaseRef.update(updates);\r\n};\r\n","import { databaseRef } from \"../../config/firebase\";\r\n\r\nexport const editItemEndDate = (\r\n  listId,\r\n  taskId,\r\n  newEndDate\r\n) => async dispatch => {\r\n  let updates = {};\r\n\r\n  updates[`lists/${listId}/items/${taskId}/end_date`] = newEndDate;\r\n  updates[`lists/${listId}/items/${taskId}/reminder_set`] = true;\r\n\r\n  databaseRef.update(updates);\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { colors } from \"../assets/globalStyles\";\r\n\r\nimport notificationSound from \"../assets/audio/notification.mp3\";\r\n\r\nimport { currTime, dateTimeTransformation } from \"../assets/helpers\";\r\n\r\nimport { checkItem } from \"../redux/actionCreators/checkItem\";\r\nimport { ignoreReminderItem } from \"../redux/actionCreators/ignoreReminderItem\";\r\nimport { editItemEndDate } from \"../redux/actionCreators/editItemEndDate\";\r\n\r\nimport { Button } from \"./basics/Button\";\r\n\r\nclass Notification extends React.PureComponent {\r\n  state = {\r\n    showNotification: false,\r\n    item: {},\r\n    pageTitle: \"Remind me...\"\r\n  };\r\n\r\n  cleanState = () => {\r\n    this.setState(\r\n      {\r\n        showNotification: false,\r\n        item: {},\r\n        pageTitle: \"Remind me...\"\r\n      },\r\n      () => {\r\n        document.title = this.state.pageTitle;\r\n      }\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.notificationFirstTime();\r\n    this.notificationTimer();\r\n  }\r\n\r\n  notificationFirstTime = () => {\r\n    setTimeout(() => {\r\n      this.notificationRun();\r\n    }, 1000);\r\n  };\r\n\r\n  notificationTimer = () => {\r\n    setInterval(() => {\r\n      this.notificationRun();\r\n    }, 60 * 1000);\r\n  };\r\n\r\n  notificationRun = () => {\r\n    let notificationData = this.allItems();\r\n    let dateNow = new Date(currTime()).getTime();\r\n    const audio = new Audio(notificationSound);\r\n    notificationData.map(item => {\r\n      let itemEndDate = new Date(item.end_date).getTime();\r\n      if (item.reminder_set) {\r\n        if (dateNow >= itemEndDate) {\r\n          if (!this.state.showNotification) {\r\n            audio.play();\r\n          }\r\n          this.setState(\r\n            {\r\n              showNotification: true,\r\n              item,\r\n              pageTitle: `Reminder: ${item.task}`\r\n            },\r\n            () => {\r\n              document.title = this.state.pageTitle;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  allItems = () => {\r\n    let lists = { ...this.props.lists };\r\n    let items = [];\r\n    let allItemsUgly = [];\r\n    if (\r\n      this.props.lists != \"loading\" &&\r\n      Object.keys(this.props.lists).length > 0\r\n    ) {\r\n      allItemsUgly = Object.keys(lists).map(listKey => lists[listKey].items);\r\n      allItemsUgly.map(item => {\r\n        if (typeof item === \"object\" && !Array.isArray(item)) {\r\n          Object.keys(item).map(itemTiny => items.push(item[itemTiny]));\r\n        } else {\r\n          item.map(itemTiny => items.push(itemTiny));\r\n        }\r\n      });\r\n\r\n      items = items.filter(item => !item.ignoreMe);\r\n\r\n      return items;\r\n    }\r\n  };\r\n\r\n  handleComplete = () => {\r\n    this.cleanState();\r\n\r\n    this.props.handleCheckItem(this.state.item.id, this.state.item.list_id);\r\n    this.props.handleEditItemEndDate(\r\n      this.state.item.list_id,\r\n      this.state.item.id,\r\n      \"\"\r\n    );\r\n  };\r\n  handleIgnore = () => {\r\n    this.cleanState();\r\n    this.props.handleIgnoreReminderItem(\r\n      this.state.item.id,\r\n      this.state.item.list_id\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.showNotification ? (\r\n          <StyledNotification\r\n            mainColor={this.props.lists[this.state.item.list_id].color}\r\n          >\r\n            <h1>{this.state.item.task}</h1>\r\n            <span>{dateTimeTransformation(this.state.item.end_date)}</span>\r\n            <Button\r\n              primary\r\n              clickBehavior={() => this.handleComplete()}\r\n              text={\"Complete\"}\r\n            />\r\n            <Button\r\n              clickBehavior={() => this.handleIgnore()}\r\n              text={\"Ignore for now\"}\r\n            />\r\n          </StyledNotification>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledNotification = styled(\"header\")`\r\n  background: ${colors.light};\r\n  border-bottom: 3px solid ${props => props.mainColor};\r\n  position: fixed;\r\n  right: 0;\r\n  top: 10%;\r\n  width: 350px;\r\n  z-index: 10;\r\n  padding: 20px;\r\n  h1 {\r\n    font-size: 17px;\r\n    color: ${props => props.mainColor};\r\n    margin-bottom: 5px;\r\n  }\r\n  span {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n    color: ${colors.lightGrey};\r\n  }\r\n  button {\r\n    display: inline-block;\r\n  }\r\n  button + button {\r\n    margin-left: 25px;\r\n  }\r\n`;\r\n\r\nfunction mapStateToProps({ lists }) {\r\n  return { lists };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleCheckItem(itemToCheck, listId) {\r\n    dispatch(checkItem(itemToCheck, listId));\r\n  },\r\n  handleIgnoreReminderItem(itemToCheck, listId) {\r\n    dispatch(ignoreReminderItem(itemToCheck, listId));\r\n  },\r\n  handleEditItemEndDate(listId, taskId, newDate) {\r\n    dispatch(editItemEndDate(listId, taskId, newDate));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Notification);\r\n","import { databaseRef } from \"../../config/firebase\";\r\n\r\nexport const editListName = (listId, newName) => async dispatch => {\r\n  let updates = {};\r\n\r\n  updates[`lists/${listId}/name`] = newName;\r\n  databaseRef.update(updates);\r\n};\r\n","import { databaseRef } from \"../../config/firebase\";\r\n\r\nexport const deleteList = (listId, nextListId) => async dispatch => {\r\n  let updates = {};\r\n  updates[`lists/${listId}`] = null;\r\n  databaseRef.update(updates);\r\n\r\n  return {\r\n    type: \"DELETE_LIST\",\r\n    nextListId\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { lighten } from \"polished\";\r\n\r\nimport { colors } from \"../../assets/globalStyles\";\r\n\r\nexport default class Sort extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <StyledSortBy>\r\n        <span>Sort by: </span>\r\n        <select\r\n          value={this.props.sortBy}\r\n          onChange={e => this.props.handleSortByChange(e.target.value)}\r\n        >\r\n          <option value=\"most-important\">Most Important</option>\r\n          <option value=\"alphabetically-a-z\">Alphabetically (A-Z)</option>\r\n          <option value=\"alphabetically-z-a\">Alphabetically (Z-A)</option>\r\n          <option value=\"newest\">Newest</option>\r\n          <option value=\"oldest\">Oldest</option>\r\n        </select>\r\n      </StyledSortBy>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledSortBy = styled(\"div\")`\r\n  float: right;\r\n  margin-top: 10px;\r\n  span {\r\n    font-size: 1.1em;\r\n  }\r\n  select {\r\n    border: 1px solid ${lighten(0.15, colors.lightGrey)};\r\n    padding: 7px 2px;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n","/* eslint-disable react/display-name */\r\nimport React from \"react\";\r\n\r\nexport default function contentEditable(WrappedComponent) {\r\n  return class extends React.Component {\r\n    state = {\r\n      editing: false\r\n    };\r\n\r\n    toggleEdit = e => {\r\n      e.stopPropagation();\r\n      if (this.state.editing) {\r\n        this.cancel();\r\n      } else {\r\n        this.edit();\r\n      }\r\n    };\r\n\r\n    edit = () => {\r\n      this.setState(\r\n        {\r\n          editing: true\r\n        },\r\n        () => {\r\n          this.domElm.focus();\r\n        }\r\n      );\r\n    };\r\n\r\n    save = () => {\r\n      this.setState({ editing: false }, () => {\r\n        this.props.getInputValue(this.domElm.textContent);\r\n      });\r\n    };\r\n\r\n    cancel = () => {\r\n      this.setState({\r\n        editing: false\r\n      });\r\n    };\r\n\r\n    handleKeyDown = e => {\r\n      const { key } = e;\r\n      const { dontSaveOnEnter } = this.props;\r\n      if (dontSaveOnEnter) {\r\n        switch (key) {\r\n          case \"Escape\":\r\n            this.save();\r\n            break;\r\n        }\r\n      } else {\r\n        switch (key) {\r\n          case \"Enter\":\r\n          case \"Escape\":\r\n            this.save();\r\n            break;\r\n        }\r\n      }\r\n    };\r\n\r\n    render() {\r\n      let editOnClick = true;\r\n      const { editing } = this.state;\r\n      if (this.props.editOnClick !== undefined) {\r\n        editOnClick = this.props.editOnClick;\r\n      }\r\n      return (\r\n        <WrappedComponent\r\n          suppressContentEditableWarning={true}\r\n          className={editing ? \"editing\" : \"\"}\r\n          onClick={editOnClick ? this.toggleEdit : undefined}\r\n          contentEditable={editing}\r\n          ref={domNode => {\r\n            this.domElm = domNode;\r\n          }}\r\n          onBlur={this.save}\r\n          onKeyDown={this.handleKeyDown}\r\n          {...this.props}\r\n        >\r\n          {this.props.value}\r\n        </WrappedComponent>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport contentEditable from \"../../hocs/contentEditable\";\r\n\r\nexport default class DivThanInput extends React.PureComponent {\r\n  render() {\r\n    let EditableDiv = contentEditable(StyledEditableDiv);\r\n    const divProps = Object.assign({}, this.props);\r\n    return (\r\n      <EditableDiv\r\n        className={this.props.className}\r\n        maxLength=\"35\"\r\n        type=\"text\"\r\n        placeholder={this.props.inputPlaceholder}\r\n        value={this.props.value}\r\n        {...divProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledEditableDiv = styled(\"div\")`\r\n  cursor: text;\r\n`;\r\n","import { databaseRef } from \"../../config/firebase\";\r\n\r\nexport const deleteItem = (itemToDelete, listId) => async dispatch => {\r\n  let updates = {};\r\n  updates[`lists/${listId}/items/${itemToDelete}`] = null;\r\n\r\n  databaseRef.update(updates);\r\n};\r\n","import { databaseRef } from \"../../config/firebase\";\r\n\r\nexport const changeItemPriorityColor = (\r\n  listId,\r\n  taskId,\r\n  newPriority\r\n) => async dispatch => {\r\n  let updates = {};\r\n\r\n  updates[`lists/${listId}/items/${taskId}/priority`] = newPriority;\r\n\r\n  databaseRef.update(updates);\r\n};\r\n",null,"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { lighten, darken } from \"polished\";\r\n\r\nimport { priorityColors, colors } from \"../../assets/globalStyles\";\r\n\r\nimport { Button } from \"./Button.jsx\";\r\n\r\nclass PrioritySelector extends React.PureComponent {\r\n  state = {\r\n    showChangePriority: false\r\n  };\r\n\r\n  priorityColor = () => {\r\n    let low = priorityColors.low;\r\n    let medium = priorityColors.medium;\r\n    let high = priorityColors.high;\r\n    let { priority } = this.props;\r\n\r\n    if (priority === 1) {\r\n      return low;\r\n    } else if (priority === 2) {\r\n      return medium;\r\n    } else {\r\n      return high;\r\n    }\r\n  };\r\n\r\n  handleChangePriority = (listId, taskId, newPriority) => {\r\n    if (newPriority === \"low\") {\r\n      newPriority = 1;\r\n    } else if (newPriority === \"medium\") {\r\n      newPriority = 2;\r\n    } else {\r\n      newPriority = 3;\r\n    }\r\n    this.props.handleChangeItemPriorityColor(listId, taskId, newPriority);\r\n    this.setState({\r\n      showChangePriority: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span className=\"priority\">\r\n          <Button\r\n            icon=\"priority\"\r\n            clickBehavior={() => this.setState({ showChangePriority: true })}\r\n            text=\"Priority\"\r\n            mainColor={this.priorityColor()}\r\n          />\r\n        </span>\r\n        {this.state.showChangePriority && (\r\n          <StyledColorList>\r\n            {Object.keys(priorityColors).map((priorityColor, i) => (\r\n              <StyledLabelColor\r\n                key={i}\r\n                mainColor={priorityColors[priorityColor]}\r\n                onClick={() =>\r\n                  this.handleChangePriority(\r\n                    this.props.listId,\r\n                    this.props.taskId,\r\n                    priorityColor\r\n                  )\r\n                }\r\n              >\r\n                {priorityColor}\r\n              </StyledLabelColor>\r\n            ))}\r\n          </StyledColorList>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledColorList = styled(\"ul\")`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 80px;\r\n  width: 240px;\r\n  border-radius: 3px;\r\n  box-shadow: 1px 1px 4px ${colors.lightGrey};\r\n  background: ${lighten(0.025, colors.light)};\r\n  padding: 10px;\r\n`;\r\n\r\nconst StyledLabelColor = styled(\"li\")`\r\n  cursor: pointer;\r\n  background: ${props => props.mainColor};\r\n  border-bottom: 2px solid ${props => darken(0.2, props.mainColor)};\r\n  width: 70px;\r\n  text-align: center;\r\n  display: inline-block;\r\n  padding: 10px 0;\r\n  color: white;\r\n  &:not(:first-child) {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport default PrioritySelector;\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { lighten } from \"polished\";\r\n\r\nimport { colors } from \"../../assets/globalStyles\";\r\n\r\nimport { checkItem } from \"../../redux/actionCreators/checkItem\";\r\n\r\nconst RatioButton = props => (\r\n  <StyledRatio\r\n    mainColor={props.mainColor}\r\n    className={props.checked ? \"checked\" : \"not-checked\"}\r\n  >\r\n    <input type=\"checkbox\" id={`checkbox${props.taskId}`} />\r\n    <label\r\n      htmlFor={`checkbox${props.taskId}`}\r\n      onClick={() => props.handleCheckItem(props.taskId, props.listId)}\r\n    />\r\n  </StyledRatio>\r\n);\r\n\r\n// styled components\r\nconst StyledRatio = styled(\"div\")`\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n  width: 20px;\r\n  height: 20px;\r\n  label {\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: ${colors.light};\r\n    border: 1px solid ${colors.lightGrey};\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    left: 0;\r\n    position: relative;\r\n    display: block;\r\n    transition: 0.25s all ease;\r\n    &:hover {\r\n      background-color: ${lighten(0.3, colors.secondary)};\r\n      border: 1px solid ${colors.secondary};\r\n    }\r\n    &:after {\r\n      border: 5px solid ${props => props.mainColor};\r\n      border-top: none;\r\n      border-right: none;\r\n      content: \"\";\r\n      height: 6px;\r\n      top: -1px;\r\n      left: 1px;\r\n      opacity: 0;\r\n      position: absolute;\r\n      transform: rotate(-45deg);\r\n      width: 16px;\r\n    }\r\n  }\r\n  input[type=\"checkbox\"] {\r\n    width: 1px;\r\n    height: 1px;\r\n    visibility: hidden;\r\n    position: absolute;\r\n  }\r\n  &.checked {\r\n    label {\r\n      background-color: white;\r\n      border-color: ${props => lighten(0.1, props.mainColor)};\r\n      &:after {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleCheckItem(itemToCheck, listId) {\r\n    dispatch(checkItem(itemToCheck, listId));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(RatioButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { dateTimeTransformation } from \"../assets/helpers\";\r\n\r\nimport { deleteItem } from \"../redux/actionCreators/deleteItem\";\r\nimport { changeItemPriorityColor } from \"../redux/actionCreators/changeItemPriorityColor\";\r\n\r\nimport BellIcon from \"../assets/icons/bell.svg\";\r\n\r\nimport PrioritySelector from \"./basics/PrioritySelector\";\r\nimport RatioButton from \"./basics/RatioButton\";\r\nimport { Button } from \"./basics/Button\";\r\nimport { colors } from \"../assets/globalStyles\";\r\n\r\nclass SingleToDo extends React.PureComponent {\r\n  getClasses = () => {\r\n    let classes = \"\";\r\n    if (this.props.task.checked) {\r\n      if (this.props.showItem) {\r\n        classes = \"checked show\";\r\n      } else {\r\n        classes = \"checked hide\";\r\n      }\r\n    } else {\r\n      classes = \"not-checked show\";\r\n    }\r\n    return classes;\r\n  };\r\n\r\n  deleteItem = (itemToDelete, listId) => {\r\n    this.props.handleDeleteItem(itemToDelete, listId);\r\n    setTimeout(\r\n      function() {\r\n        this.props.completeListLayout();\r\n      }.bind(this),\r\n      0\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <StyledLi\r\n          id=\"single-to-do\"\r\n          className={this.getClasses()}\r\n          onMouseEnter={() =>\r\n            this.props.showToDoOptionsFunc(this.props.task.id, true)\r\n          }\r\n          onMouseLeave={() =>\r\n            this.props.showToDoOptionsFunc(this.props.task.id, false)\r\n          }\r\n        >\r\n          <div>\r\n            <RatioButton\r\n              checked={this.props.task.checked}\r\n              taskId={this.props.task.id}\r\n              mainColor={this.props.mainColor}\r\n              listId={this.props.listId}\r\n            />\r\n            <StyledTask\r\n              role=\"button\"\r\n              onKeyPress={() => this.props.itemListDetails(this.props.task)}\r\n              onClick={() => this.props.itemListDetails(this.props.task)}\r\n              tabIndex=\"0\"\r\n            >\r\n              {this.props.task.task}\r\n              {this.props.task.end_date != \"\" && (\r\n                <StyledTime\r\n                  mainColor={\r\n                    this.props.task.reminder_set\r\n                      ? colors.primary\r\n                      : colors.lightGrey\r\n                  }\r\n                >\r\n                  <BellIcon />\r\n                  {dateTimeTransformation(this.props.task.end_date)}\r\n                </StyledTime>\r\n              )}\r\n            </StyledTask>\r\n            <PrioritySelector\r\n              handleChangeItemPriorityColor={\r\n                this.props.handleChangeItemPriorityColor\r\n              }\r\n              priority={this.props.task.priority}\r\n              listId={this.props.listId}\r\n              taskId={this.props.task.id}\r\n            />\r\n            {this.props.showToDoOptions && (\r\n              <span>\r\n                <Button\r\n                  icon=\"delete\"\r\n                  clickBehavior={() =>\r\n                    this.deleteItem(this.props.task.id, this.props.listId)\r\n                  }\r\n                  text=\"Delete\"\r\n                />\r\n              </span>\r\n            )}\r\n          </div>\r\n        </StyledLi>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledLi = styled(\"li\")`\r\n  position: relative;\r\n  padding: 15px 20px;\r\n  text-align: left;\r\n  > div {\r\n    width: 100%;\r\n  }\r\n  div {\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n    transition: 0.25s all ease;\r\n    vertical-align: top;\r\n    cursor: pointer;\r\n  }\r\n  span {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    &.priority {\r\n      right: 40px;\r\n    }\r\n  }\r\n  &.checked {\r\n    div {\r\n      text-decoration: line-through;\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n  &.hide {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StyledTask = styled(\"div\")`\r\n  width: calc(100% - 90px);\r\n  padding-left: 15px;\r\n  vertical-align: middle !important;\r\n`;\r\n\r\nconst StyledTime = styled(\"span\")`\r\n  position: relative !important;\r\n  display: block;\r\n  font-size: 0.8em;\r\n  margin-top: 6px;\r\n  color: ${props => props.mainColor};\r\n  svg {\r\n    width: 16px;\r\n    stroke-width: 13px;\r\n    stroke: ${props => props.mainColor};\r\n    fill: ${props => props.mainColor};\r\n    margin-bottom: -3px;\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = ({ lists }) => ({\r\n  lists\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleDeleteItem(itemToDelete, listId) {\r\n    dispatch(deleteItem(itemToDelete, listId));\r\n  },\r\n  handleChangeItemPriorityColor(listId, taskId, newPriority) {\r\n    dispatch(changeItemPriorityColor(listId, taskId, newPriority));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SingleToDo);\r\n","import { databaseRef } from \"../../config/firebase\";\r\n\r\nimport { randomId, currTime } from \"../../assets/helpers\";\r\n\r\nexport const addItem = (itemToAdd, listId) => async dispatch => {\r\n  let updates = {};\r\n  let taskId = randomId();\r\n\r\n  databaseRef\r\n    .child(`lists/${listId}/items/`)\r\n    .once(\"value\")\r\n    .then(function(snapshot) {\r\n      let ignoreMeValue = snapshot.val() && snapshot.val().ignoreMe;\r\n      if (ignoreMeValue != undefined) {\r\n        updates[`lists/${listId}/items/ignoreMe`] = null;\r\n      }\r\n\r\n      let newItemObject = {\r\n        id: taskId,\r\n        task: itemToAdd,\r\n        start_date: currTime(),\r\n        end_date: \"\",\r\n        reminder_set: false,\r\n        checked: false,\r\n        priority: 1,\r\n        list_id: listId\r\n      };\r\n\r\n      updates[`lists/${listId}/items/${taskId}`] = newItemObject;\r\n\r\n      databaseRef.update(updates);\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addItem } from \"../redux/actionCreators/addItem\";\r\n\r\nclass AddItem extends React.PureComponent {\r\n  state = {\r\n    inputValue: \"\"\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.inputValue != \"\" && this.state.inputValue.length > 3) {\r\n      this.props.handleAddItem(this.state.inputValue, this.props.listId);\r\n      setTimeout(\r\n        function() {\r\n          this.props.completeListLayout();\r\n        }.bind(this),\r\n        0\r\n      );\r\n      this.setState({ inputValue: \"\" });\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={e => this.handleSubmit(e)}>\r\n        <StyledInput\r\n          maxLength=\"35\"\r\n          type=\"text\"\r\n          placeholder=\"Insert new item\"\r\n          value={this.state.inputValue}\r\n          onChange={e => this.handleChange(e)}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledInput = styled(\"input\")`\r\n  position: relative;\r\n  text-align: left;\r\n  margin-left: 53px;\r\n  width: 60%;\r\n  margin-bottom: 5px;\r\n  border: 0;\r\n  background: transparent;\r\n  padding: 20px 0;\r\n`;\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleAddItem(newItem, listId) {\r\n    dispatch(addItem(newItem, listId));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AddItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { lighten, darken } from \"polished\";\r\nimport Loadable from \"react-loadable\";\r\n\r\nimport { colors } from \"../assets/globalStyles\";\r\n\r\nimport { editListName } from \"../redux/actionCreators/editListName\";\r\nimport { deleteList } from \"../redux/actionCreators/deleteList\";\r\n\r\nimport Loading from \"./basics/Loading\";\r\nimport Sort from \"./basics/Sort\";\r\nimport { Button } from \"./basics/Button\";\r\nimport DivThanInput from \"./basics/DivThanInput\";\r\nimport SingleToDo from \"./SingleToDo\";\r\nimport AddItem from \"./AddItem\";\r\n\r\nconst loading = () => <Loading />;\r\n\r\nconst LoadableSingleToDoDetails = Loadable({\r\n  loader: () => import(\"./SingleToDoDetails\"),\r\n  loading\r\n});\r\n\r\nclass ToDos extends React.PureComponent {\r\n  state = {\r\n    showToDoOptions: false\r\n  };\r\n\r\n  handleEditList = inputValue => {\r\n    if (inputValue.length > 3) {\r\n      this.props.handleEditListName(this.props.currentList.id, inputValue);\r\n    } else {\r\n      alert(\"List name should be longer than 3 letters\");\r\n    }\r\n  };\r\n\r\n  deleteList = () => {\r\n    this.props.handleDeleteList(\r\n      this.props.currentList.id,\r\n      this.props.nextListId\r\n    );\r\n  };\r\n\r\n  itemListDetails = task => {\r\n    this.props.showDetailsFunc(true, task.id);\r\n  };\r\n\r\n  closeDetails = () => {\r\n    this.props.showDetailsFunc(false, {});\r\n  };\r\n\r\n  showToDoOptionsFunc = (taskId, toggle) => {\r\n    this.setState({ showToDoOptions: `${toggle},${taskId}` });\r\n  };\r\n\r\n  showEditListNameFunc = () => {\r\n    this.setState({ showEditListName: true });\r\n  };\r\n\r\n  numberOfCheckedItems = () => {\r\n    let checkedItems = this.props.currentList.items.filter(\r\n      item => item.checked\r\n    );\r\n    return checkedItems.length;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <StyledEditableDiv\r\n          className={this.props.className}\r\n          value={this.props.currentList.name}\r\n          getInputValue={this.handleEditList}\r\n          inputPlaceholder=\"List name\"\r\n        />\r\n        <Button\r\n          icon=\"delete\"\r\n          clickBehavior={() => this.deleteList()}\r\n          text=\"Delete\"\r\n        />\r\n        <Sort\r\n          sortBy={this.props.sortBy}\r\n          handleSortByChange={this.props.handleSortByChange}\r\n        />\r\n        <StyledTodoHolder>\r\n          <StyledFilterChecked onClick={() => this.props.filterCheckedFunc()}>\r\n            {this.props.filterChecked\r\n              ? `Show checked items - (${this.numberOfCheckedItems()})`\r\n              : `Hide checked items - (${this.numberOfCheckedItems()})`}\r\n          </StyledFilterChecked>\r\n          <StyledToDo\r\n            id=\"to-dos\"\r\n            mainColor={this.props.currentList.color}\r\n            toDoWidth={this.props.showDetails ? \"55%\" : \"100%\"}\r\n          >\r\n            <ul>\r\n              {this.props.currentList.items.map(task => (\r\n                <SingleToDo\r\n                  key={task.id}\r\n                  task={task}\r\n                  itemListDetails={this.itemListDetails}\r\n                  mainColor={this.props.currentList.color}\r\n                  showToDoOptionsFunc={this.showToDoOptionsFunc}\r\n                  showToDoOptions={\r\n                    `true,${task.id}` === this.state.showToDoOptions &&\r\n                    this.state.showToDoOptions\r\n                  }\r\n                  listId={this.props.currentList.id}\r\n                  completeListLayout={this.props.completeListLayout}\r\n                  showItem={this.props.filterChecked ? false : true}\r\n                />\r\n              ))}\r\n              <AddItem\r\n                addItem={this.props.addItem}\r\n                listId={this.props.currentList.id}\r\n                completeListLayout={this.props.completeListLayout}\r\n              />\r\n              {[...Array(this.props.completeListLayoutNum)].map((e, i) => (\r\n                <li key={i} className={i === 0 ? \"fake first-fake\" : \"fake\"} />\r\n              ))}\r\n            </ul>\r\n          </StyledToDo>\r\n          {this.props.showDetails && (\r\n            <LoadableSingleToDoDetails\r\n              task={this.props.detailsTask}\r\n              showDetailsFunc={this.props.showDetailsFunc}\r\n              mainColor={this.props.currentList.color}\r\n              closeDetails={this.closeDetails}\r\n              showToDoOptionsFunc={this.showToDoOptionsFunc}\r\n              itemListDetails={this.itemListDetails}\r\n              listId={this.props.currentList.id}\r\n              completeListLayout={this.props.completeListLayout}\r\n            />\r\n          )}\r\n        </StyledTodoHolder>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledTodoHolder = styled(\"div\")`\r\n  display: block;\r\n  position: relative;\r\n  margin-bottom: 4vh;\r\n`;\r\n\r\nconst StyledFilterChecked = styled(\"div\")`\r\n  width: 100%;\r\n  display: block;\r\n  padding: 12px 40px;\r\n  background: ${colors.light};\r\n  cursor: pointer;\r\n  transition: all 0.25s ease;\r\n  &:hover {\r\n    background: ${darken(0.02, colors.light)};\r\n  }\r\n`;\r\n\r\nconst StyledEditableDiv = styled(DivThanInput)`\r\n  display: inline-block;\r\n  width: 250px;\r\n  font-size: 2em;\r\n  text-transform: capitalize;\r\n  border-bottom: 1px solid white;\r\n  transition: all 0.25s ease;\r\n  &:hover,\r\n  &:focus {\r\n    border-bottom: 1px solid ${colors.lightGrey};\r\n  }\r\n`;\r\n\r\nconst StyledToDo = styled(\"div\")`\r\n  padding: 0 20px;\r\n  border-radius: 3px;\r\n  box-shadow: 1px 1px 4px ${colors.lightGrey};\r\n  background: ${lighten(0.025, colors.light)};\r\n  height: 55vh;\r\n  overflow-x: auto;\r\n  width: ${props => props.toDoWidth};\r\n  &::-webkit-scrollbar-track {\r\n    background-color: ${props => lighten(0.5, props.mainColor)};\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    background-color: ${props => lighten(0.5, props.mainColor)};\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: ${props => props.mainColor};\r\n  }\r\n  > ul > li {\r\n    position: relative;\r\n    border-bottom: 1px solid ${lighten(0.2, colors.lightGrey)};\r\n    &.fake {\r\n      height: 77px;\r\n      &.first-fake {\r\n        border-top: 1px solid ${lighten(0.2, colors.lightGrey)};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = ({ lists }) => ({\r\n  lists\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleEditListName(listId, newName) {\r\n    dispatch(editListName(listId, newName));\r\n  },\r\n  handleDeleteList(listId, nextListId) {\r\n    dispatch(deleteList(listId, nextListId));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ToDos);\r\n","import { databaseRef } from \"../../config/firebase\";\r\n\r\nimport { randomId, currTime } from \"../../assets/helpers\";\r\nimport { listColors } from \"../../assets/globalStyles\";\r\n\r\nexport const addList = (newList, newColor, userId) => async dispatch => {\r\n  let listId = randomId();\r\n  let updates = {};\r\n  let newListObject = {\r\n    name: newList,\r\n    id: listId,\r\n    color: listColors[newColor],\r\n    creation_date: currTime(),\r\n    owner: userId || \"\",\r\n    items: { ignoreMe: { ignoreMe: true } }\r\n  };\r\n  updates[`lists/${listId}`] = newListObject;\r\n\r\n  databaseRef.update(updates);\r\n};\r\n","import { databaseRef } from \"../../config/firebase\";\r\n\r\nimport { listColors } from \"../../assets/globalStyles\";\r\n\r\nexport const changeListColor = (listId, newColor) => async dispatch => {\r\n  let updates = {};\r\n  let color = listColors[newColor];\r\n\r\n  updates[`lists/${listId}/color`] = color;\r\n\r\n  databaseRef.update(updates);\r\n};\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { lighten } from \"polished\";\r\n\r\nimport { listColors, colors } from \"../../assets/globalStyles\";\r\nimport ChangeColorIcon from \"../../assets/icons/paint-board-and-brush.svg\";\r\n\r\nclass ColorSelector extends React.PureComponent {\r\n  state = {\r\n    showColorSelector: false\r\n  };\r\n\r\n  handleColorChange = (listId, listColor) => {\r\n    this.props.handleColorChange(listId, listColor);\r\n    this.setState({\r\n      showColorSelector: !this.state.showColorSelector\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <StyledImg\r\n          alt=\"change color\"\r\n          role=\"button\"\r\n          onKeyPress={() =>\r\n            this.setState({\r\n              showColorSelector: !this.state.showColorSelector\r\n            })\r\n          }\r\n          onClick={() =>\r\n            this.setState({\r\n              showColorSelector: !this.state.showColorSelector\r\n            })\r\n          }\r\n          tabIndex=\"0\"\r\n        />\r\n        {this.state.showColorSelector && (\r\n          <StyledColorList>\r\n            {Object.keys(listColors).map((listColor, i) => (\r\n              <StyledLabelColor\r\n                key={i}\r\n                style={{ backgroundColor: listColors[listColor] }}\r\n                onClick={() =>\r\n                  this.handleColorChange(this.props.list.id, listColor)\r\n                }\r\n              />\r\n            ))}\r\n          </StyledColorList>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledImg = styled(ChangeColorIcon)`\r\n  cursor: pointer;\r\n  width: 20px;\r\n  display: inline-block;\r\n  margin-bottom: -6px;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst StyledColorList = styled(\"ul\")`\r\n  position: absolute;\r\n  bottom: 20px;\r\n  z-index: 9999;\r\n  left: 0;\r\n  border-radius: 3px;\r\n  box-shadow: 1px 1px 4px ${colors.lightGrey};\r\n  background: ${lighten(0.025, colors.light)};\r\n  padding: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledLabelColor = styled(\"li\")`\r\n  cursor: pointer;\r\n  height: 30px;\r\n  width: 30px;\r\n  display: inline-block;\r\n  &:not(:first-child) {\r\n    margin-left: 2%;\r\n  }\r\n`;\r\n\r\nexport default ColorSelector;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { listColors } from \"../assets/globalStyles\";\r\n\r\nimport { Button } from \"./basics/Button\";\r\nimport ColorSelector from \"./basics/ColorSelector\";\r\n\r\nclass AddList extends React.PureComponent {\r\n  state = {\r\n    inputValue: \"\",\r\n    inputColor: \"lightGrey\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    let inputNow = e.target.value;\r\n    this.setState({ inputValue: inputNow });\r\n  };\r\n\r\n  clickBehavior = e => {\r\n    e.preventDefault();\r\n    if (this.state.inputValue != \"\" && this.state.inputValue.length > 3) {\r\n      this.props.clickBehavior(\r\n        this.state.inputValue,\r\n        this.state.inputColor,\r\n        this.props.user.uid\r\n      );\r\n      this.setState({ inputValue: \"\", inputColor: \"lightGrey\" });\r\n    }\r\n  };\r\n\r\n  handleColorAdd = (list, color) => {\r\n    this.setState({ inputColor: color });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <StyledForm\r\n          mainColor={listColors[this.state.inputColor]}\r\n          buttonHeight={this.state.inputValue === \"\" ? \"7px\" : \"40px\"}\r\n        >\r\n          <div className=\"input-holder\">\r\n            <input\r\n              autoFocus={this.props.autoFocus ? true : false}\r\n              type=\"text\"\r\n              placeholder=\"Create new list\"\r\n              value={this.state.inputValue}\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n            {!this.props.hideColorSelector && (\r\n              <ColorSelector handleColorChange={this.handleColorAdd} />\r\n            )}\r\n          </div>\r\n          <Button\r\n            style={{ backgroundColor: \"blue\" }}\r\n            clickBehavior={e => this.clickBehavior(e)}\r\n            text={this.props.text}\r\n          />\r\n        </StyledForm>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledForm = styled(\"form\")`\r\n  display: inline-block;\r\n  position: relative;\r\n  vertical-align: top;\r\n  margin-left: 2%;\r\n  .input-holder {\r\n    border-radius: 3px 3px 0 0;\r\n    padding: 12px 0 10px;\r\n    max-width: 160px;\r\n    input {\r\n      border: 0;\r\n      font-size: 1.2em;\r\n      width: calc(100% - 40px);\r\n      display: inline-block;\r\n      padding: 0 0 0 10px;\r\n    }\r\n  }\r\n  img {\r\n    background: white;\r\n    margin: 0;\r\n    padding: 15px 10px;\r\n    margin-bottom: -20px;\r\n    border-radius: 0 3px 0 0;\r\n    width: 40px;\r\n    border: 1px solid ${props => props.mainColor};\r\n    border-left: 0;\r\n  }\r\n  button {\r\n    background: ${props => props.mainColor};\r\n    display: block;\r\n    width: 100%;\r\n    border-radius: 0;\r\n    font-size: 2em;\r\n    padding: 0 0 7px;\r\n    line-height: 1em;\r\n    margin: 0;\r\n    height: ${props => props.buttonHeight};\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n  user\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(AddList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { lighten } from \"polished\";\r\n\r\nimport { colors } from \"../assets/globalStyles\";\r\n\r\nimport { addList } from \"../redux/actionCreators/addList\";\r\nimport { changeListColor } from \"../redux/actionCreators/changeListColor\";\r\nimport selectList from \"../redux/actionCreators/selectList\";\r\n\r\nimport ColorSelector from \"./basics/ColorSelector\";\r\nimport AddList from \"./AddList\";\r\n\r\nclass ListsManager extends React.PureComponent {\r\n  handleSelectList = listId => {\r\n    this.props.handleSelectList(listId);\r\n    setTimeout(\r\n      function() {\r\n        this.props.completeListLayout();\r\n      }.bind(this),\r\n      0\r\n    );\r\n  };\r\n\r\n  sortByCreationDate = () => {\r\n    let { lists } = this.props;\r\n    let listsArray = [];\r\n    Object.keys(lists).map(list => listsArray.push(lists[list]));\r\n\r\n    listsArray.sort(function(a, b) {\r\n      return new Date(a.creation_date) - new Date(b.creation_date);\r\n    });\r\n\r\n    return listsArray;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h3>Lists:</h3>\r\n        <StyledUl>\r\n          {this.sortByCreationDate().map((list, i) => (\r\n            <StyledList key={i}>\r\n              <StyledButton\r\n                className=\"color-wrapper\"\r\n                mainColor={list.color}\r\n                onClick={() => this.handleSelectList(list.id)}\r\n              >\r\n                <div className=\"info-wrapper\">\r\n                  <span>{list.name}</span>\r\n                  <ColorSelector\r\n                    list={list}\r\n                    handleColorChange={this.props.handleColorChange}\r\n                  />\r\n                </div>\r\n              </StyledButton>\r\n            </StyledList>\r\n          ))}\r\n          <AddList\r\n            autoFocus={false}\r\n            clickBehavior={this.props.handleAddList}\r\n            text=\"+\"\r\n          />\r\n        </StyledUl>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledUl = styled(\"ul\")`\r\n  overflow-x: auto;\r\n  max-width: 100%;\r\n  white-space: nowrap;\r\n  height: 100px;\r\n  padding-top: 15px;\r\n  &::-webkit-scrollbar-track {\r\n    background-color: ${lighten(0.5, colors.primary)};\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    height: 6px;\r\n    background-color: ${lighten(0.5, colors.primary)};\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: ${colors.primary};\r\n  }\r\n`;\r\n\r\nconst StyledList = styled(\"li\")`\r\n  margin: 0 2%;\r\n  display: inline-block;\r\n  text-align: center;\r\n  &:first-child {\r\n    margin-left: 0;\r\n  }\r\n  span {\r\n    text-transform: capitalize;\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(\"button\")`\r\n  background: white;\r\n  border: 0;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  height: 50px;\r\n  margin-bottom: 10px;\r\n  border-bottom: 6px solid ${props => props.mainColor};\r\n  transition: 0.2s all ease;\r\n  &:hover {\r\n    border-bottom-width: 10px;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = ({ lists }) => ({\r\n  lists\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleAddList(newList, newColor, userId) {\r\n    dispatch(addList(newList, newColor, userId));\r\n  },\r\n  handleColorChange(listId, newColor) {\r\n    dispatch(changeListColor(listId, newColor));\r\n  },\r\n  handleSelectList: listId => {\r\n    dispatch(selectList(listId));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListsManager);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { lighten } from \"polished\";\r\n\r\nimport { colors } from \"../assets/globalStyles\";\r\n\r\nimport { addList } from \"../redux/actionCreators/addList\";\r\n\r\nimport { Button } from \"./basics/Button\";\r\nimport AddList from \"./AddList\";\r\n\r\nclass NoToDos extends React.PureComponent {\r\n  state = {\r\n    showAddList: false\r\n  };\r\n\r\n  handleAddList = (newList, newColor, userId) => {\r\n    this.props.handleAddList(newList, newColor, userId);\r\n    this.setState({ showAddList: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <StyledNoToDos>\r\n        {this.state.showAddList ? (\r\n          <AddList\r\n            hideColorSelector\r\n            autoFocus={true}\r\n            clickBehavior={this.handleAddList}\r\n            text=\"+\"\r\n          />\r\n        ) : (\r\n          <React.Fragment>\r\n            <h2>Create your first list</h2>\r\n            <Button\r\n              className=\"footer-item\"\r\n              icon=\"add\"\r\n              clickBehavior={() => this.setState({ showAddList: true })}\r\n              text=\"Create list\"\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </StyledNoToDos>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst StyledNoToDos = styled(\"div\")`\r\n  padding: 0 20px;\r\n  border-radius: 3px;\r\n  box-shadow: 1px 1px 4px ${colors.lightGrey};\r\n  background: ${lighten(0.025, colors.light)};\r\n  height: 55vh;\r\n  overflow-x: auto;\r\n  width: 100%;\r\n  text-align: center;\r\n  h2 {\r\n    margin-top: 15vh;\r\n  }\r\n  button {\r\n    padding: 0;\r\n    margin: 1vh auto;\r\n    svg {\r\n      width: 80px;\r\n      height: 80px;\r\n    }\r\n  }\r\n  form {\r\n    margin-top: 18vh;\r\n  }\r\n`;\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleAddList(newList, newColor, userId) {\r\n    dispatch(addList(newList, newColor, userId));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(NoToDos);\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchToDos } from \"../redux/actionCreators/fetchToDos\";\r\nimport selectList from \"../redux/actionCreators/selectList\";\r\n\r\nimport Loading from \"./basics/Loading\";\r\nimport Notification from \"./Notification\";\r\nimport ToDos from \"./ToDos\";\r\nimport ListsManager from \"./ListsManager\";\r\nimport NoToDos from \"./NoToDos\";\r\n\r\nclass ToDosPage extends React.PureComponent {\r\n  state = {\r\n    completeListLayoutNum: 0,\r\n    showDetails: false,\r\n    detailsTask: {},\r\n    sortBy: \"most-important\",\r\n    filterChecked: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.handleFetchToDos(this.props.user.uid);\r\n    if (\r\n      this.props.lists != \"loading\" &&\r\n      Object.keys(this.props.lists).length > 0\r\n    ) {\r\n      this.completeListLayout();\r\n      this.getNextListIdToShowAfterDeleteCurrentList();\r\n    }\r\n  }\r\n\r\n  getCurrentList = () => {\r\n    let lists = { ...this.props.lists };\r\n\r\n    let currList = Object.keys(lists).filter(\r\n      list => lists[list].id === this.props.activeList\r\n      );\r\n\r\n    let items = lists[currList].items;\r\n    let itemsArray = [];\r\n    Object.keys(items)\r\n      .filter(item => !items[item].hasOwnProperty(\"ignoreMe\"))\r\n      .map(itemKey => itemsArray.push(items[itemKey]));\r\n\r\n    this.sortBy(itemsArray);\r\n\r\n    lists[currList].items = itemsArray;\r\n\r\n    return lists[currList];\r\n  };\r\n\r\n  sortBy = itemsArray => {\r\n    if (this.state.sortBy === \"most-important\") {\r\n      itemsArray.sort(function(a, b) {\r\n        return b.priority - a.priority;\r\n      });\r\n    } else if (this.state.sortBy === \"alphabetically-a-z\") {\r\n      itemsArray.sort(function(a, b) {\r\n        var nameA = a.task.toLowerCase(),\r\n          nameB = b.task.toLowerCase();\r\n        if (nameA < nameB)\r\n          //sort string ascending\r\n          return -1;\r\n        if (nameA > nameB) return 1;\r\n        return 0; //default return value (no sorting)\r\n      });\r\n    } else if (this.state.sortBy === \"alphabetically-z-a\") {\r\n      itemsArray.sort(function(a, b) {\r\n        var nameA = a.task.toLowerCase(),\r\n          nameB = b.task.toLowerCase();\r\n        if (nameA < nameB)\r\n          //sort string ascending\r\n          return 1;\r\n        if (nameA > nameB) return -1;\r\n        return 0; //default return value (no sorting)\r\n      });\r\n    } else if (this.state.sortBy === \"newest\") {\r\n      itemsArray.sort(function(a, b) {\r\n        return new Date(b.start_date) - new Date(a.start_date);\r\n      });\r\n    } else if (this.state.sortBy === \"oldest\") {\r\n      itemsArray.sort(function(a, b) {\r\n        return new Date(a.start_date) - new Date(b.start_date);\r\n      });\r\n    }\r\n\r\n    return itemsArray;\r\n  };\r\n\r\n  completeListLayout = () => {\r\n    let currList = this.getCurrentList();\r\n    let containerHeight = document.querySelector(\"#to-dos\").clientHeight;\r\n    let itemHeight = 77;\r\n    let maxItems = Math.floor(containerHeight / itemHeight);\r\n    if (currList.items.length < maxItems) {\r\n      let completeListLayoutNum = maxItems - currList.items.length;\r\n      this.setState({ completeListLayoutNum }, () => {});\r\n    } else {\r\n      this.setState({ completeListLayoutNum: 0 }, () => {});\r\n    }\r\n  };\r\n\r\n  getNextListIdToShowAfterDeleteCurrentList = () => {\r\n    let lists = { ...this.props.lists };\r\n    let currList = Object.keys(lists).filter(\r\n      list => lists[list].id === this.props.activeList\r\n    )[0];\r\n    let listsLength = Object.keys(this.props.lists).length - 1;\r\n    let nextListIndex = Object.keys(lists).indexOf(currList) + 1;\r\n    let nextList =\r\n      nextListIndex > listsLength\r\n        ? lists[Object.keys(lists)[0]].id\r\n        : lists[Object.keys(lists)[nextListIndex]].id;\r\n\r\n    return nextList;\r\n  };\r\n\r\n  showDetailsFunc = (showDetails, detailsTaskId) => {\r\n    setTimeout(() => {\r\n      let items = this.getCurrentList().items;\r\n      let itemsArray = [];\r\n      Object.keys(items).map(itemKey => itemsArray.push(items[itemKey]));\r\n      let detailsTask = itemsArray.filter(item => item.id === detailsTaskId)[0];\r\n      this.setState({ showDetails, detailsTask }, () => {});\r\n    }, 0);\r\n  };\r\n\r\n  handleSortByChange = sortBy => {\r\n    this.setState({ sortBy }, () => {});\r\n  };\r\n\r\n  filterCheckedFunc = () => {\r\n    this.setState({ filterChecked: !this.state.filterChecked }),\r\n      () => {\r\n        this.getCurrentList();\r\n      };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Notification lists={this.props.lists} />\r\n        <StyledContainer\r\n          className={this.state.showDetails ? \"expanded\" : \"compressed\"}\r\n        >\r\n          {this.props.lists === \"loading\" ? (\r\n            <Loading />\r\n          ) : Object.keys(this.props.lists).length > 0 ? (\r\n            <React.Fragment>\r\n              <ToDos\r\n                currentList={this.getCurrentList()}\r\n                nextListId={this.getNextListIdToShowAfterDeleteCurrentList()}\r\n                filterCheckedFunc={this.filterCheckedFunc}\r\n                filterChecked={this.state.filterChecked}\r\n                completeListLayoutNum={this.state.completeListLayoutNum}\r\n                completeListLayout={this.completeListLayout}\r\n                showDetails={this.state.showDetails}\r\n                showDetailsFunc={this.showDetailsFunc}\r\n                detailsTask={this.state.detailsTask}\r\n                sortBy={this.state.sortBy}\r\n                handleSortByChange={this.handleSortByChange}\r\n              />\r\n              <ListsManager completeListLayout={this.completeListLayout} />\r\n            </React.Fragment>\r\n          ) : (\r\n            <NoToDos />\r\n          )}\r\n        </StyledContainer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// styled components\r\nconst expandsToDoOuter = keyframes`\r\n  0% {\r\n    width: 60%;\r\n  }\r\n  100% {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst compressToDoOuter = keyframes`\r\n  0% {\r\n    width: 80%;\r\n  }\r\n  100% {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nconst StyledContainer = styled(\"div\")`\r\n  width: 60%;\r\n  margin: 30px auto;\r\n  position: relative;\r\n  transition: all 0.25s ease;\r\n  &.expanded {\r\n    animation: ${expandsToDoOuter} 0.25s ease forwards;\r\n  }\r\n  &.compressed {\r\n    animation: ${compressToDoOuter} 0.25s ease forwards;\r\n  }\r\n  h2 {\r\n    text-transform: capitalize;\r\n    font-size: 2em;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = ({ lists, activeList, user }) => ({\r\n  lists,\r\n  activeList,\r\n  user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleSelectList(listId) {\r\n    dispatch(selectList(listId));\r\n  },\r\n  handleFetchToDos(userId) {\r\n    dispatch(fetchToDos(userId));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ToDosPage);\r\n"]}