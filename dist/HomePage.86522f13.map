{"version":3,"sources":["assets\\mock_data.js","components\\SingleReminder.js","components\\basics\\Button.js","components\\Reminders.js","pages\\HomePage.js"],"names":["SingleReminder","StyledLi","colors","secondary","StyledRatio","props","task","checked","id","handleCheck","PureComponent","btn","css","primary","light","danger","Button","classes","React","clickBehaviour","text","Reminders","state","mock_data","currState","currTask","find","x","taskId","setState","Component","map","console","log","HomePage","CenteredContainer","lightGrey"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,CACb,CACM,GAAA,EACE,KAAA,cACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,EACE,KAAA,gBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,EACE,KAAA,iBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,EACE,KAAA,aACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,EACE,KAAA,eACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,EACE,KAAA,eACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,EACE,KAAA,oBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,EACE,KAAA,gBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,EACE,KAAA,gBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,iBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,cACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,aACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,iBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,mBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,gBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,uBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,mBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,iBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,iBACM,WAAA,uBACF,SAAA,uBACD,SAAA,GAEX,CACM,GAAA,GACE,KAAA,iBACM,WAAA,uBACF,SAAA,uBACD,SAAA;;ACtEEA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,kLAAAA,0BAAAA,kEAAAA,CAAAA,kLAAAA,0BAAAA,mEAAAA,EAAAA,EAAAA,CAAAA,6hBAAAA,CAAAA,8hBApEf,EAAA,QAAA,SAoEeA,EAAAA,EAAAA,GAnEf,EAAA,QAAA,eACA,EAAA,QAAA,iBAkEeA,EAAAA,EAAAA,GAhEf,EAAA,QAAA,mBAgEeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GArEf,SAAA,EAAA,EAAA,GAAA,OAAA,OAAA,OAAA,OAAA,iBAAA,EAAA,CAAA,IAAA,CAAA,MAAA,OAAA,OAAA,OAOA,IAAMC,GAAW,EAAO,EAAA,SAAA,KAAP,CASSC,EAAAA,EAAOC,OAAAA,UACXD,EAAOC,OAAAA,WAQvBC,GAAc,EAAO,EAAA,SAAA,MAAP,CAApB,GA6BMJ,EAAiB,SAAA,GACrB,OAAA,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACE,EAAA,QAAA,cAAA,EAAU,CAAA,UAAWK,EAAMC,KAAKC,QAAU,UAAY,eACpD,EAAA,QAAA,cAAA,EAAA,KACS,EAAA,QAAA,cAAA,QAAA,CAAA,KAAK,WAAW,GAAeF,WAAAA,EAAMC,KAAKE,KACjD,EAAA,QAAA,cAAA,QAAA,CACsBH,QAAAA,WAAAA,EAAMC,KAAKE,GACtB,QAAA,WAAMH,OAAAA,EAAMI,YAAYJ,EAAMC,KAAKE,QAGhD,EAAA,QAAA,cAAA,OAAA,KAAaF,EAAAA,KAAKA,SAKTN,QAAAA,QAAAA;;AC9CmBU,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,YAAAA,EAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,EAAAA,CAAAA,uCAAAA,2EAAAA,6BAAAA,CAAAA,uCAAAA,2EAAAA,8BAAAA,EAAAA,EAAAA,CAAAA,mBAAAA,OAAAA,CAAAA,mBAAAA,QAvBlC,EAAA,QAAA,SAuBkCA,EAAAA,EAAAA,GAtBlC,EAAA,QAAA,WAEA,EAAA,QAAA,sBAoBkCA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,kEAAAA,GAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,IAAAA,OAAAA,eAAAA,OAAAA,eAAAA,EAAAA,GAAAA,EAAAA,UAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,OAAAA,OAAAA,OAAAA,iBAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,OAAAA,OAAAA,OAlBlC,IAAMC,GAAMC,EAAAA,EAAN,KAEUV,EAAAA,EAAOW,OAAAA,QAIZX,EAAOY,OAAAA,OAIZX,GAAYS,EAAAA,EAAZ,KACUV,EAAAA,EAAOC,OAAAA,WAGjBY,GAASH,EAAAA,EAAT,KACUV,EAAAA,EAAOa,OAAAA,QAGVC,EAAAA,QAAAA,OAAAA,SAAAA,GAAqBN,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAChCO,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,QAAU,WACJ,OAAA,EAAKZ,MAAMF,UACHQ,EAAOR,IAAAA,EACR,EAAKE,MAAMU,OACVJ,EAAOI,IAAAA,EAEZJ,GACR,EAAA,EAAA,GAR+BD,OAAAA,EAAAA,EAANQ,EAAMR,QAAAA,eAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAUvB,MAAA,WAEL,OAAA,EAAA,QAAA,cAAA,SAAA,CACgB,UAAA,GAAA,KAAKO,UACV,QAAA,KAAKZ,MAAMc,gBAEdd,KAAAA,MAAMe,UAhBcV,EAArBM;;ACfQK,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GARrB,EAAA,QAAA,SAQqBA,EAAAA,EAAAA,GAPrB,EAAA,QAAA,eAEA,EAAA,QAAA,uBAKqBA,EAAAA,EAAAA,GAHrB,EAAA,QAAA,oBAGqBA,EAAAA,EAAAA,GAFrB,EAAA,QAAA,mBAEqBA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,CAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,QAAAA,EAAAA,EAAAA,OAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,MAAAA,KAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,kEAAAA,GAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,IAAAA,OAAAA,eAAAA,OAAAA,eAAAA,EAAAA,GAAAA,EAAAA,UAAAA,GAAAA,IAAAA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACnBC,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACNC,UAAAA,EAAAA,SAGFd,EAAAA,YAAc,SAAU,GAClBe,IAAAA,EAAgB,GAAA,OAAA,EAAA,EAAKF,MAAMC,YAC3BE,EAAWD,EAAUE,KAAK,SAAA,GAAKC,OAAAA,EAAEnB,KAAOoB,IACnCrB,EAAAA,SAAWkB,EAASlB,QACnBkB,EAAAA,SACLI,EAAAA,SAAS,CAAEN,UAAWC,KAC5B,EAAA,EAAA,GAXkBH,OAAAA,EAAAA,EAAkBH,EAAMY,QAAAA,WAAxBT,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAaV,MAAA,WAAA,IAAA,EAAA,KAEL,OAAA,EAAA,QAAA,cAAA,EAAA,QAAO,SAAP,KACE,EAAA,QAAA,cAAA,KAAA,KACQC,KAAAA,MAAMC,UAAUQ,IAAI,SAAA,GACxB,OAAA,EAAC,QAAA,cAAA,EAAD,QAAA,CACOzB,IAAAA,EAAKE,GACJF,KAAAA,EACO,YAAA,EAAKG,iBAIvB,EAAA,QAAA,cAAA,EAAD,OAAA,CACO,KAAA,mBACW,eAAA,WAAMuB,OAAAA,QAAQC,IAAI,aA3BvBZ,EAAAA,GAAAA,QAAAA,QAAAA;;ACDAa,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,EAAAA,CAAAA,4UAAAA,oBAAAA,CAAAA,4UAAAA,qBAPrB,EAAA,QAAA,SAOqBA,EAAAA,EAAAA,GANrB,EAAA,QAAA,iBAMqBA,EAAAA,EAAAA,GAJrB,EAAA,QAAA,mBAEA,EAAA,QAAA,2BAEqBA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,OAAAA,OAAAA,OAAAA,iBAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,OAAAA,OAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,kEAAAA,GAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,IAAAA,OAAAA,eAAAA,OAAAA,eAAAA,EAAAA,GAAAA,EAAAA,UAAAA,GAAAA,IAAAA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,KAAAA,GAAAA,EAAAA,MAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,MAAAA,KAAAA,YAAAA,OAAAA,EAAAA,EAAiBhB,EAAMY,QAAAA,WAAvBI,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SACV,MAAA,WACDC,IAAAA,GAAoB,EAAO,EAAA,SAAA,MAAP,CAcFjC,EAAAA,EAAOkC,OAAAA,WAK7B,OAAA,EAAA,QAAA,cAAA,MAAK,CAAA,UAAU,QACb,EAAA,QAAA,cAAA,EAAA,KACG,EAAA,QAAA,cAAA,EAAD,QAAA,YAvBWF,EAAAA,GAAAA,QAAAA,QAAAA","file":"HomePage.86522f13.map","sourceRoot":"..\\src","sourcesContent":["export default [\r\n  {\r\n    id: 1,\r\n    task: \"Ema Barhems\",\r\n    start_date: \"2018-03-20T13:28:09Z\",\r\n    end_date: \"2019-11-12T08:51:18Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 2,\r\n    task: \"Culver Pitway\",\r\n    start_date: \"2018-10-08T09:15:29Z\",\r\n    end_date: \"2019-12-01T12:21:01Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 3,\r\n    task: \"Michael Botten\",\r\n    start_date: \"2017-12-18T10:42:37Z\",\r\n    end_date: \"2019-12-18T23:18:47Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 4,\r\n    task: \"Erl Cottle\",\r\n    start_date: \"2018-06-13T23:35:46Z\",\r\n    end_date: \"2019-11-09T23:24:06Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 5,\r\n    task: \"Alleen Butte\",\r\n    start_date: \"2018-10-11T13:35:09Z\",\r\n    end_date: \"2019-12-22T03:57:38Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 6,\r\n    task: \"Skip MacBean\",\r\n    start_date: \"2018-07-04T10:35:58Z\",\r\n    end_date: \"2019-11-30T20:39:39Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 7,\r\n    task: \"Constantine Veart\",\r\n    start_date: \"2018-01-08T17:19:03Z\",\r\n    end_date: \"2019-12-22T02:15:20Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 8,\r\n    task: \"Jarad Salliss\",\r\n    start_date: \"2018-01-17T13:35:27Z\",\r\n    end_date: \"2019-11-27T07:17:42Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 9,\r\n    task: \"Celinda Slade\",\r\n    start_date: \"2018-08-10T06:34:22Z\",\r\n    end_date: \"2019-11-05T14:01:14Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 10,\r\n    task: \"Marsha Tubbles\",\r\n    start_date: \"2018-09-20T10:57:50Z\",\r\n    end_date: \"2019-12-09T22:44:49Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 11,\r\n    task: \"Ania Spieck\",\r\n    start_date: \"2018-05-20T20:56:16Z\",\r\n    end_date: \"2019-12-07T13:23:06Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 12,\r\n    task: \"Addi Lount\",\r\n    start_date: \"2018-06-02T05:22:25Z\",\r\n    end_date: \"2019-11-03T09:30:02Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 13,\r\n    task: \"Padget Sherred\",\r\n    start_date: \"2018-07-29T23:40:33Z\",\r\n    end_date: \"2019-12-12T15:52:18Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 14,\r\n    task: \"Junette Boulsher\",\r\n    start_date: \"2018-07-06T03:33:57Z\",\r\n    end_date: \"2019-11-02T15:07:46Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 15,\r\n    task: \"Erl Arunowicz\",\r\n    start_date: \"2018-04-15T08:47:09Z\",\r\n    end_date: \"2019-12-28T05:14:39Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 16,\r\n    task: \"Alexandrina Yokelman\",\r\n    start_date: \"2018-10-01T00:41:39Z\",\r\n    end_date: \"2019-12-23T03:45:11Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 17,\r\n    task: \"Granthem Grinyov\",\r\n    start_date: \"2018-04-23T16:12:28Z\",\r\n    end_date: \"2019-12-15T15:10:07Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 18,\r\n    task: \"Antonino Eynon\",\r\n    start_date: \"2018-06-02T05:12:19Z\",\r\n    end_date: \"2020-01-01T09:59:20Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 19,\r\n    task: \"Katlin Gradley\",\r\n    start_date: \"2018-09-21T16:32:34Z\",\r\n    end_date: \"2019-12-21T19:16:53Z\",\r\n    checked: false\r\n  },\r\n  {\r\n    id: 20,\r\n    task: \"Kaspar Wreakes\",\r\n    start_date: \"2018-02-12T22:28:51Z\",\r\n    end_date: \"2019-12-30T18:14:13Z\",\r\n    checked: false\r\n  }\r\n];\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"react-emotion\";\r\n\r\nimport { colors } from \"../globalStyles\";\r\n\r\nconst StyledLi = styled(\"li\")`\r\n  position: relative;\r\n  padding: 30px 0;\r\n  &.checked {\r\n    span {\r\n      text-decoration: line-through;\r\n      opacity: 0.5;\r\n    }\r\n    label {\r\n      background-color: ${colors.secondary};\r\n      border-color: ${colors.secondary};\r\n      &:after {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledRatio = styled(\"div\")`\r\n  label {\r\n    background-color: #fff;\r\n    border: 1px solid #ccc;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    height: 28px;\r\n    left: 0;\r\n    position: absolute;\r\n    width: 28px;\r\n    &:after {\r\n      border: 2px solid #fff;\r\n      border-top: none;\r\n      border-right: none;\r\n      content: \"\";\r\n      height: 6px;\r\n      left: 7px;\r\n      opacity: 0;\r\n      position: absolute;\r\n      top: 8px;\r\n      transform: rotate(-45deg);\r\n      width: 12px;\r\n    }\r\n  }\r\n  input[type=\"checkbox\"] {\r\n    visibility: hidden;\r\n  }\r\n`;\r\n\r\nconst SingleReminder = props => (\r\n  <React.Fragment>\r\n    <StyledLi className={props.task.checked ? \"checked\" : \"not-checked\"}>\r\n      <StyledRatio>\r\n        <input type=\"checkbox\" id={`checkbox${props.task.id}`} />\r\n        <label\r\n          htmlFor={`checkbox${props.task.id}`}\r\n          onClick={() => props.handleCheck(props.task.id)}\r\n        />\r\n      </StyledRatio>\r\n      <span>{props.task.task}</span>\r\n    </StyledLi>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default SingleReminder;\r\n","import React from \"react\";\r\nimport { css } from \"emotion\";\r\n\r\nimport { colors } from \"../../globalStyles\";\r\n\r\nconst btn = css`\r\n  cursor: pointer;\r\n  background: ${colors.primary};\r\n  border: 0;\r\n  padding: 10px 30px;\r\n  border-radius: 3px;\r\n  color: ${colors.light};\r\n  margin: 10px auto;\r\n`;\r\n\r\nconst secondary = css`\r\n  background: ${colors.secondary};\r\n`;\r\n\r\nconst danger = css`\r\n  background: ${colors.danger};\r\n`;\r\n\r\nexport class Button extends React.PureComponent {\r\n  classes = () => {\r\n    if (this.props.secondary) {\r\n      return `${btn} ${secondary}`;\r\n    } else if (this.props.danger) {\r\n      return `${btn} ${danger}`;\r\n    }\r\n    return btn;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className={`${this.classes()}`}\r\n        onClick={this.props.clickBehaviour}\r\n      >\r\n        {this.props.text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport mock_data from \"../assets/mock_data\";\r\n\r\nimport SingleReminder from \"./SingleReminder\";\r\nimport { Button } from \"./basics/Button\";\r\n\r\nexport default class Reminders extends React.Component {\r\n  state = {\r\n    mock_data\r\n  };\r\n\r\n  handleCheck = taskId => {\r\n    let currState = [...this.state.mock_data];\r\n    let currTask = currState.find(x => x.id === taskId);\r\n    currTask.checked = !currTask.checked;\r\n    currState.currTask;\r\n    this.setState({ mock_data: currState });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ul>\r\n          {this.state.mock_data.map(task => (\r\n            <SingleReminder\r\n              key={task.id}\r\n              task={task}\r\n              handleCheck={this.handleCheck}\r\n            />\r\n          ))}\r\n        </ul>\r\n        <Button\r\n          text=\"Increment number\"\r\n          clickBehaviour={() => console.log(\"a\")}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"react-emotion\";\r\n\r\nimport { colors } from \"../globalStyles\";\r\n\r\nimport Reminders from \"../components/Reminders\";\r\n\r\nexport default class HomePage extends React.Component {\r\n  render() {\r\n    const CenteredContainer = styled(\"div\")`\r\n      width: 60%;\r\n      position: relative;\r\n      padding: 20px 0;\r\n      margin: 30px auto;\r\n      text-align: center;\r\n      &:after {\r\n        content: \"\";\r\n        display: block;\r\n        position: absolute;\r\n        width: 120%;\r\n        left: -10%;\r\n        bottom: 0;\r\n        height: 1px;\r\n        background-color: ${colors.lightGrey};\r\n      }\r\n    `;\r\n\r\n    return (\r\n      <div className=\"home\">\r\n        <CenteredContainer>\r\n          <Reminders />\r\n        </CenteredContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}